{"version":3,"sources":["helpers.js","components/Game.js","components/Stats.js","components/Settings.js","redux/actions/games.js","redux/actions/packs.js","App.js","redux/store.js","redux/reducers/games.js","index.js"],"names":["countPriceHour","game","dlcPrice","items","dlc","length","forEach","dlcEl","price","type","itemsTotalTime","console","log","games","g","playtimeForever","Math","round","playTimeInHours","formatPlaytime","minutes","hrs","floor","mins","toString","concat","getTotalPrice","total","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputSubmit","event","appid","keyCode","saveData","state","value","setState","target","handleDlc","saveDataDlc","dlcNameRef","current","dlcPriceRef","definePriceHourClassName","el","priceHour","hideGame","appId","gameClassName","hidden","axios","patch","openDlc","e","dlcClassName","patchSubmitedData","preventDefault","packId","selectRef","options","selectedIndex","foundPack","packages","find","toConsumableArray","then","onAddedToPack","React","createRef","data","_this2","react_default","a","createElement","Fragment","className","src","logo","onClick","name","index","totalPrice","defaultValue","onKeyUp","onSubmit","ref","map","pack","placeholder","Component","Stats","_ref","packs","filter","playtimeTwoWeeks","sort","g1","g2","_g","objectSpread","i","components_Game","Settings","isOpen","onClose","serverStatus","onSortChange","sortedBy","sortOrder","onSortOrderChange","addPack","drawer","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","hasBackdrop","position","Position","RIGHT","usePortal","size","Drawer","SIZE_SMALL","Classes","DRAWER_BODY","DIALOG_BODY","radioGroup","label","onChange","selectedValue","controls","react_final_form_es","render","_ref2","handleSubmit","component","gamesActionsTypes","fetchGames","dispatch","get","response","packsActionsTypes","fetchPacks","App","isSettingsOpen","isStatsOpen","fetchData","_callee","regenerator_default","wrap","_context","prev","next","stop","parseInt","catch","gameUpdate","nameValue","priceValue","clonedGames","elementToUpdatePrice","element","indexElToUpdatePrice","findIndex","updated","dispatchGamesToStore","packName","packPrice","post","_this$props","buttons","icon","components_Settings","currentTarget","SIZE_LARGE","Stats_Stats","_","key","fetchGamesData","connect","_ref3","middlewares","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","store","createStore","action","isNaN","pricePerHour","id","foundGame","push","random","item","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"uOAAMA,EAAiB,SAACC,GACtB,IAAIC,EAAW,EAQf,IANID,EAAKE,OAASF,EAAKG,IAAIC,OAAS,GAClCJ,EAAKG,IAAIE,QAAQ,SAACC,GAChBL,GAAsBK,EAAMC,QAId,SAAdP,EAAKQ,KAAiB,CACxB,IAAIC,EAAiB,EAIrB,OAFAC,QAAQC,IAAIX,EAAKY,OACjBZ,EAAKY,MAAMP,QAAQ,SAAAQ,GAAC,OAAIJ,GAAkCI,EAAEC,kBACxDL,GAAkB,GACbT,EAAKO,OAEZG,QAAQC,IAAIX,EAAKO,MAAOE,EAAiB,IAClCM,KAAKC,MAAOhB,EAAKO,MAAQE,EAAiB,KAKrD,GAAIT,EAAKc,iBAAmB,GAE1B,OADYd,EAAKO,MAAQN,EAGzB,IAAIgB,EAAkBjB,EAAKc,gBAAkB,GAE7C,OADad,EAAKO,MAASN,GAAYgB,GAKrCC,EAAiB,SAACC,GACtB,IAAMC,EAAML,KAAKM,MAAMF,EAAU,IAC7BG,EAAOH,EAAU,GAKrB,OAJIG,EAAO,IACTA,EAAKC,WAAWnB,OAAS,IAAIkB,GAAc,IAGxCF,EAIAE,EAIL,GAAAE,OAAUJ,EAAV,MAAAI,OAAkBF,EAAlB,KAHE,GAAAE,OAAUJ,EAAV,KAJA,GAAAI,OAAUF,EAAV,MAUEG,EAAgB,SAACzB,GACrB,IAAI0B,EAAQ1B,EAAKO,MAKjB,OAJIP,EAAKG,KAAOH,EAAKG,IAAIC,QACvBJ,EAAKG,IAAIE,QAAQ,SAAAF,GAAG,OAAIuB,GAAgBvB,EAAII,QAGvCmB,GCkGMC,cArJb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAWRQ,kBAAoB,SAACC,EAAOC,GACJ,KAAlBD,EAAME,QACRV,EAAKD,MAAMY,SAASF,EAAOT,EAAKY,MAAMC,OAEtCb,EAAKc,SAAS,CAACD,MAAOL,EAAMO,OAAOF,SAhBpBb,EAoBnBgB,UAAY,SAACR,EAAOC,GACI,KAAlBD,EAAME,SACRV,EAAKD,MAAMkB,YAAYR,EAAOT,EAAKkB,WAAWC,QAAQN,MAAOb,EAAKoB,YAAYD,QAAQN,QAtBvEb,EA0BnBqB,yBAA2B,SAACC,GAC1B,IAAIC,EAAYrD,EAAeoD,GAE/B,OAAIC,GAAa,GACR,YACEA,GAAa,GACf,QACEA,GAAa,IACf,SACEA,GAAa,IACf,SACEA,GAAa,IACf,WADF,GArCUvB,EA0CnBwB,SAAW,SAACC,GAEVzB,EAAKc,SAAS,CAACY,cAAe,OAAQC,QAAQ,GAAO,WACnDC,IAAMC,MAAN,0CAAAlC,OAAsD8B,GAAS,CAACE,OAAQ3B,EAAKY,MAAMe,YA7CpE3B,EAkDnB8B,QAAU,SAACC,GACsB,cAA3B/B,EAAKY,MAAMoB,aACbhC,EAAKc,SAAS,CAACkB,aAAc,qBAE7BhC,EAAKc,SAAS,CAACkB,aAAc,gBAtDdhC,EA0DnBiC,kBAAoB,SAACR,EAAOM,GAC1BA,EAAEG,iBACkBT,EAAM/B,WAA1B,IACMyC,EAASnC,EAAKoC,UAAUjB,QAAQkB,QAAQrC,EAAKoC,UAAUjB,QAAQmB,eAAezB,MAC9E0B,EAAYvC,EAAKD,MAAMyC,SAASC,KAAK,SAACnB,GAAD,OAAQA,EAAGa,QAAUA,IAEhEP,IAAMC,MAAN,0CAAAlC,OAAsDwC,GAAU,CAAC9D,MAAM4B,OAAAyC,EAAA,EAAAzC,CAAKsC,EAAUlE,OAAhBsB,OAAA,CAAuB8B,MAC1FkB,KAAK,WACJ3C,EAAKD,MAAM6C,gBACX5C,EAAKwB,SAASC,MAjElBzB,EAAKkB,WAAa2B,IAAMC,YACxB9C,EAAKoB,YAAcyB,IAAMC,YACzB9C,EAAKoC,UAAYS,IAAMC,YACvB9C,EAAKY,MAAQ,CACXC,MAAO,GACPc,OAAQ5B,EAAMgD,KAAKpB,OACnBK,aAAc,oBARChC,wEAwEV,IAAAgD,EAAA7C,KACA4C,EAAQ5C,KAAKJ,MAAbgD,KAEP,OACEE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAS,eAAA1D,OAAiBQ,KAAKS,MAAMe,OAAS,SAAW,KAC5DsB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,OAAKG,IAAKP,EAAKQ,QAGjBN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWG,QAAS,SAAAzB,GAAC,OAAIiB,EAAKlB,QAAQC,KAAKgB,EAAKU,MAC/DR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,iBAAA1D,OAAmBQ,KAAKkB,yBAAyB0B,MAC/DE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAf,IAA6BlD,KAAKJ,MAAM2D,MAAQ,GAChDT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAkBN,EAAKY,WAAtC,OAKJV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBhE,EAAe0D,EAAK9D,mBAIrDgE,EAAAC,EAAAC,cAAA,OAAKE,UAAS,GAAA1D,OAAKQ,KAAKS,MAAMoB,aAAhB,aACZiB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaO,aAAcb,EAAKrE,MAAOC,KAAK,SACtDkF,QAAS,SAACrD,GAAD,OAAWwC,EAAKzC,kBAAkBC,EAAOuC,EAAKtB,MAAOsB,EAAK9D,qBAE5EgE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMR,EAAKxB,SAASuB,EAAKtB,SAA1C,SAEFwB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACE,SAAdN,EAAKpE,MACJsE,EAAAC,EAAAC,cAAA,QAAMW,SAAU,SAAA/B,GAAC,OAAIiB,EAAKf,kBAAkBc,EAAKtB,MAAOM,KACtDkB,EAAAC,EAAAC,cAAA,UAAQY,IAAK5D,KAAKiC,WACfjC,KAAKJ,MAAMyC,UAAYrC,KAAKJ,MAAMyC,SAASwB,IAAI,SAAAC,GAAI,OAAIhB,EAAAC,EAAAC,cAAA,UAAQtC,MAAOoD,EAAK9B,QAAS8B,EAAKR,SAE5FR,EAAAC,EAAAC,cAAA,4BAMRF,EAAAC,EAAAC,cAAA,OAAKE,UAAWlD,KAAKS,MAAMoB,cAET,SAAde,EAAKpE,KACHsE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZN,EAAKhE,MAAMiF,IAAI,SAAC7F,GAAD,OAAU8E,EAAAC,EAAAC,cAAA,WACxBF,EAAAC,EAAAC,cAAA,WAAMhF,EAAKsF,MACXR,EAAAC,EAAAC,cAAA,WAAM9D,EAAelB,EAAKc,sBAI9BgE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGL,EAAKzE,KAAOyE,EAAKzE,IAAI0F,IAAI,SAAA1C,GAAE,OAAI2B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAC7CJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAW/B,EAAGmC,MAC7BR,EAAAC,EAAAC,cAAA,WAAM7B,EAAG5C,UAEXuE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,WAAWa,YAAY,WAAWvF,KAAK,OACjDkF,QAAS,SAACrD,GAAD,OAAWwC,EAAKhC,UAAUR,EAAOuC,EAAKtB,QAAQsC,IAAK5D,KAAKe,cAG1E+B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,WAAWa,YAAY,YAAYvF,KAAK,OAClDkF,QAAS,SAACrD,GAAD,OAAWwC,EAAKhC,UAAUR,EAAOuC,EAAKtB,QAAQsC,IAAK5D,KAAKiB,yBA3IvE+C,gECDNC,2BAAQ,SAAAC,GAAsB,IAAnBtF,EAAmBsF,EAAnBtF,MAAOuF,EAAYD,EAAZC,MACzB5F,EAAQ,EACRO,EAAkB,EActB,OAZAF,EAAMP,QAAQ,SAAAL,GACPA,EAAKwD,SACRjD,GAAgBkB,EAAczB,GAC9Bc,GAAoCd,EAAKc,mBAI7CqF,EAAM9F,QAAQ,SAAAyF,GACZvF,GAAgBuF,EAAKvF,MACrBO,GAAoCgF,EAAKhF,kBAIzCgE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,2BAAAxD,OAAsBjB,EAAtB,MACAuE,EAAAC,EAAAC,cAAA,8BAAAxD,OAAyBT,KAAKC,MAAMF,EAAkB,IAAtD,SAEFgE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,gCAEEpE,EACGwF,OAAO,SAAAvF,GAAC,OAAIA,EAAEwF,mBACdC,KAAK,SAACC,EAAIC,GAAL,OAAYA,EAAGH,iBAAmBE,EAAGF,mBAC1CR,IAAI,SAAAhF,GACH,IAAM4F,EAAE3E,OAAA4E,EAAA,EAAA5E,CAAA,GAAOjB,GAEf,OADA4F,EAAG3F,gBAAkB2F,EAAGJ,iBACjBI,IAERZ,IAAI,SAAChF,EAAG8F,GAAJ,OAAU7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAMhC,KAAM/D,EAAG0E,MAAOoB,GAAI9F,EAAEyE,KAA5B,IAAmCpE,EAAeL,EAAEwF,mDCmBhEQ,EApDE,SAAAX,GAAsG,IAAnGY,EAAmGZ,EAAnGY,OAAQC,EAA2Fb,EAA3Fa,QAASC,EAAkFd,EAAlFc,aAAcC,EAAoEf,EAApEe,aAAcC,EAAsDhB,EAAtDgB,SAAUC,EAA4CjB,EAA5CiB,UAAWC,EAAiClB,EAAjCkB,kBAAmBC,EAAcnB,EAAdmB,QACvG,OACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACER,OAAQA,EACRC,QAASA,EACTQ,WAAW,EACXC,mBAAmB,EACnBC,sBAAsB,EACtBC,cAAc,EACdC,aAAa,EACbC,SAAUC,IAASC,MACnBC,WAAW,EACXC,KAAMC,IAAOC,YAEbpD,EAAAC,EAAAC,cAAA,OAAKE,UAAWiD,IAAQC,aACtBtD,EAAAC,EAAAC,cAAA,OAAKE,UAAWiD,IAAQE,aACtBvD,EAAAC,EAAAC,cAAA,OAAKE,UAAS,gBAAA1D,OAAkBwF,KAEhClC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEC,MAAM,WACNC,SAAUvB,EACVwB,cAAevB,GAEfpC,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOH,MAAM,QAAQ7F,MAAM,eAC3BoC,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOH,MAAM,QAAQ7F,MAAM,oBAC3BoC,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOH,MAAM,iBAAiB7F,MAAM,kBAGtCoC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEC,MAAM,SACNC,SAAUpB,EACVqB,cAAetB,GAEfrC,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOH,MAAM,MAAM7F,MAAM,QACzBoC,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOH,MAAM,OAAO7F,MAAM,UAE5BoC,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEhD,SAAU0B,EACVuB,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,aAAH,OACNhE,EAAAC,EAAAC,cAAA,QAAMW,SAAUmD,GACdhE,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOrD,KAAK,WAAWyD,UAAU,QAAQvI,KAAK,OAAOuF,YAAY,iBACjEjB,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOrD,KAAK,YAAYyD,UAAU,QAAQvI,KAAK,SAASuF,YAAY,kBACpEjB,EAAAC,EAAAC,cAAA,UAAQxE,KAAK,UAAb,kEC5CHwI,EACQ,sBAQRC,EAAa,kBACxB,SAACC,GAAD,OACEzF,IACG0F,IADH,0CAEG3E,KAAK,SAAA4E,GAAQ,OAAIF,GATGtI,EASwBwI,EAASxE,KATtB,CACpCpE,KAAMwI,EACNpI,WAFwB,IAACA,MCJdyI,EACQ,sBAQRC,EAAa,kBACxB,SAACJ,GAAD,OACEzF,IACG0F,IADH,0CAEG3E,KAAK,SAAA4E,GAAQ,OAAIF,GATG/C,EASwBiD,EAASxE,KATtB,CACpCpE,KAAM6I,EACNlD,WAFwB,IAACA,MCSrBoD,6MACJ9G,MAAQ,CACNuE,aAAc,GACdE,SAAU,kBACVC,UAAW,OACXqC,gBAAgB,EAChBC,aAAa,KAOfC,+BAAY,SAAAC,IAAA,OAAAC,EAAA7E,EAAA8E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACJnI,EAAKD,MAAMqH,aADP,cAAAa,EAAAE,KAAA,EAEJnI,EAAKD,MAAM0H,aAFP,wBAAAQ,EAAAG,SAAAN,EAAA3H,WAKZQ,SAAW,SAACc,EAAO/C,GACjBsB,EAAKc,SAAS,CAAEqE,aAAc,YAC9BzG,EAAQ2J,SAAS3J,GACjBkD,IAAMC,MAAN,0CAAAlC,OAAsD8B,GAAS,CAAE/C,UAC9DiE,KAAK,SAAA4E,GAAQ,OAAIvH,EAAKc,SAAS,CAAEqE,aAAc,cAC/CmD,MAAM,SAAAf,GAAQ,OAAIvH,EAAKc,SAAS,CAAEqE,aAAc,YAEnDnF,EAAKD,MAAMwI,WAAW,CAAE9G,QAAO/C,aAGjCuC,YAAc,SAACR,EAAO+H,EAAWC,GAC/B,IAAMC,EAAWzI,OAAAyC,EAAA,EAAAzC,CAAOD,EAAKD,MAAMhB,OAC7B4J,EAAuBD,EAAYjG,KAAK,SAACmG,GAAD,OAAaA,EAAQnH,OAAShB,IAE5ET,EAAKc,SAAS,CAAEqE,aAAc,YAC9BvD,IAAMC,MAAN,0CAAAlC,OAAsDc,GAAS,CAC7DnC,IAAI2B,OAAAyC,EAAA,EAAAzC,CAAK0I,EAAqBrK,KAA3BqB,OAAA,CAAgC,CACjC8D,KAAM+E,EACN9J,MAAO+J,OAGR9F,KAAK,SAAA4E,GAAQ,OAAIvH,EAAKc,SAAS,CAAEqE,aAAc,cAC/CmD,MAAM,SAAAf,GAAQ,OAAIvH,EAAKc,SAAS,CAAEqE,aAAc,YAGnD,IAAM0D,EAAuBH,EAAYI,UAAU,SAACF,GAAD,OAAaA,EAAQnH,OAAShB,IAC3EsI,EAAO9I,OAAA4E,EAAA,EAAA5E,CAAA,GAAQ0I,GACrBI,EAAQzK,IAAR2B,OAAAyC,EAAA,EAAAzC,CAAkB8I,EAAQzK,KAA1BqB,OAAA,CAA+B,CAAE8D,KAAM+E,EAAW9J,MAAO+J,KACzDC,EAAYG,GAAwBE,EAEpC/I,EAAKD,MAAMiJ,qBAAqBN,MAGlClD,QAAU,SAAAwB,GAA6B,IAA1BiC,EAA0BjC,EAA1BiC,SAAUC,EAAgBlC,EAAhBkC,UACrBtH,IAAMuH,KAAN,yCAAqD,CAAE1F,KAAMwF,EAAUvK,MAAOwK,wFA1C9E/I,KAAK0H,6CA6CE,IAAA7E,EAAA7C,KAAAiJ,EACkBjJ,KAAKJ,MAAtBhB,EADDqK,EACCrK,MAAOuF,EADR8E,EACQ9E,MAEf,OACErB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAQhG,UAAU,cAAcG,QAAS,kBAAMR,EAAKlC,SAAS,CAAE6G,gBAAgB,KACvE2B,KAAK,aACbrG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAQhG,UAAU,cAAcG,QAAS,kBAAMR,EAAKlC,SAAS,CAAE8G,aAAa,KACpE0B,KAAK,sBACbrG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAQhG,UAAU,cAAcG,QAASrD,KAAK0H,UAAWyB,KAAK,aAGhErG,EAAAC,EAAAC,cAACoG,EAAD,CACEtE,OAAQ9E,KAAKS,MAAM+G,eACnBzC,QAAS,kBAAMlC,EAAKlC,SAAS,CAAE6G,gBAAgB,KAC/CxC,aAAchF,KAAKS,MAAMuE,aACzBC,aAAc,SAAArD,GAAC,OAAIiB,EAAKlC,SAAS,CAAEuE,SAAUtD,EAAEyH,cAAc3I,SAC7DwE,SAAUlF,KAAKS,MAAMyE,SACrBC,UAAWnF,KAAKS,MAAM0E,UACtBC,kBAAmB,SAAAxD,GAAC,OAAIiB,EAAKlC,SAAS,CAAEwE,UAAWvD,EAAEyH,cAAc3I,SACnE2E,QAASrF,KAAKqF,UAGhBvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACER,OAAQ9E,KAAKS,MAAMgH,YACnB1C,QAAS,kBAAMlC,EAAKlC,SAAS,CAAE8G,aAAa,KAC5ClC,WAAW,EACXC,mBAAmB,EACnBC,sBAAsB,EACtBC,cAAc,EACdC,aAAa,EACbC,SAAUC,IAASC,MACnBC,WAAW,EACXC,KAAMC,IAAOqD,YAEbxG,EAAAC,EAAAC,cAAA,OAAKE,UAAWiD,IAAQC,aACtBtD,EAAAC,EAAAC,cAAA,OAAKE,UAAWiD,IAAQE,aACtBvD,EAAAC,EAAAC,cAACuG,EAAD,CAAO3K,MAAKkB,OAAAyC,EAAA,EAAAzC,CAAME,KAAKJ,MAAMhB,OAAQuF,MAAKrE,OAAAyC,EAAA,EAAAzC,CAAME,KAAKJ,MAAMuE,YAKjErB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAEZsG,UAAA1J,OAAAyC,EAAA,EAAAzC,CAAcqE,GAAd3E,OAAAM,OAAAyC,EAAA,EAAAzC,CAAwBlB,IAAQ,CAACoB,KAAKS,MAAMyE,SAAU,mBAAoB,CAAClF,KAAKS,MAAM0E,YACpFf,OAAO,SAAAjD,GAAE,OAAKA,EAAGK,SACjBqC,IAAI,SAAC1C,EAAIoC,GAAL,OACHT,EAAAC,EAAAC,cAAC4B,EAAD,CACE6E,IAAKtI,EAAGG,MACRsB,KAAMzB,EACNoC,MAAOA,EACP/C,SAAUqC,EAAKrC,SACfM,YAAa+B,EAAK/B,YAClBuB,SAAUQ,EAAKjD,MAAMhB,MAAMwF,OAAO,SAACjD,GAAD,OAAQA,EAAGjD,QAC7C8D,OAAQa,EAAKpC,MAAMuB,OACnBS,cAAeI,EAAK6G,4BA/GlB1F,aAyHH2F,cACb,SAAAC,GAAA,MAAuB,CAAEhL,MAAzBgL,EAAGhL,MAA6BuF,MAAhCyF,EAAUzF,QACV,SAAC+C,GACC,MAAO,CACLD,WADK,WAEH,OAAOC,EAASD,MAGlBK,WALK,WAMH,OAAOJ,EAASI,MAGlBc,WATK,SASMpK,GACTkJ,EAAS,CACP1I,KAAM,aACNR,UAIJ6K,qBAhBK,SAgBgBjG,GACnBsE,EAAS,CACPtE,KAAMA,EACNpE,KAAM,oBAtBDmL,CA2BbpC,mBC/JIsC,EAAcC,OAAOC,6BAA+BC,YACxDC,YAAgBC,KAChBJ,OAAOC,gCACLE,YAAgBC,KAOLC,EALDC,YCLc,SAAC3J,EAAO4J,GAClC,OAAQA,EAAO7L,MACb,KAAKwI,EAWH,OAVAqD,EAAOzL,MAAMP,QAAQ,SAAAL,GACfsM,MAAMpC,SAASlK,EAAKO,QACtBP,EAAKO,MAAQ,EAEbP,EAAKO,MAAQ2J,SAASlK,EAAKO,OAE7BP,EAAKuM,aAAexM,EAAeC,GACnCA,EAAKwF,WAAa/D,EAAczB,KAG3B8B,OAAA4E,EAAA,EAAA5E,CAAA,GACFW,EADL,CAEE7B,MAAOyL,EAAOzL,QAGlB,KAAKyI,EAAL,IACSlD,EAASkG,EAATlG,MAqBP,OAnBAA,EAAM9F,QAAQ,SAAAyF,GACZA,EAAKlF,MAAQ,GACbkF,EAAKtF,KAAO,OACZsF,EAAK5F,MAAMG,QAAQ,SAAAmM,GACjB,IAAMC,EAAYhK,EAAM7B,MAAM0D,KAAK,SAAAnB,GAAE,OAAIA,EAAGG,QAAU4G,SAASsC,KAC3DC,GACF3G,EAAKlF,MAAM8L,KAAKD,KAIpB3G,EAAKhF,gBAAkB,EACnBgF,EAAKlF,OAASkF,EAAKlF,MAAMR,SAC3B0F,EAAKlF,MAAMP,QAAQ,SAAAQ,GAAC,OAAIiF,EAAKhF,iBAAmBD,EAAEC,kBAClDgF,EAAKV,KAAOU,EAAKlF,MAAMG,KAAKM,MAAMN,KAAK4L,UAAY7G,EAAKlF,MAAMR,OAAS,KAAKgF,KAC5EU,EAAKyG,aAAexM,EAAe+F,IAErCA,EAAKN,WAAaM,EAAKvF,QAGlBuB,OAAA4E,EAAA,EAAA5E,CAAA,GACFW,EADL,CAEE0D,UAGJ,IAAK,eACH,OAAOrE,OAAA4E,EAAA,EAAA5E,CAAA,GACFW,EADL,CAEE7B,MAAMkB,OAAAyC,EAAA,EAAAzC,CAAKW,EAAM7B,OAAZY,OAAAM,OAAAyC,EAAA,EAAAzC,CAAsBuK,EAAOzH,SAGtC,IAAK,aACH,IAAM5E,EAAOyC,EAAM7B,MAAMiF,IAAI,SAAA+G,GAC3B,OAAIA,EAAKtJ,QAAU+I,EAAOrM,KAAKsD,MACtBxB,OAAA4E,EAAA,EAAA5E,CAAA,GAAI8K,EAASP,EAAOrM,MAEtB4M,IAGT,OAAO9K,OAAA4E,EAAA,EAAA5E,CAAA,GACFW,EADL,CAEE7B,MAAOZ,IAGX,IAAK,eACH,OAAO8B,OAAA4E,EAAA,EAAA5E,CAAA,GACFW,EADL,CAEE7B,MAAMkB,OAAAyC,EAAA,EAAAzC,CAAKW,EAAM7B,OAAZY,OAAAM,OAAAyC,EAAA,EAAAzC,CAAsBuK,EAAOlG,UAGxC,MAAO,CACLvF,MAAO,GACPuF,MAAO,KDjET0F,GELFgB,IAASjE,OACP9D,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAUX,MAAOA,GACfrH,EAAAC,EAAAC,cAAC+H,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.b2c4c3e0.chunk.js","sourcesContent":["const countPriceHour = (game) => {\n  let dlcPrice = 0;\n\n  if(!game.items && game.dlc.length > 0) {\n    game.dlc.forEach((dlcEl) => {\n      dlcPrice = dlcPrice + dlcEl.price;\n    })\n  }\n\n  if (game.type === 'pack') {\n    let itemsTotalTime = 0;\n\n    console.log(game.games)\n    game.games.forEach(g => itemsTotalTime = itemsTotalTime + g.playtimeForever);\n    if (itemsTotalTime <= 60) {\n      return game.price;\n    } else {\n      console.log(game.price, itemsTotalTime / 60)\n      return Math.round((game.price / itemsTotalTime / 60));\n    }\n  }\n\n  let priceHour;\n  if (game.playtimeForever <= 60) {\n    priceHour = game.price + dlcPrice;\n    return priceHour\n  } else {\n    let playTimeInHours = game.playtimeForever / 60;\n    priceHour = (game.price  + dlcPrice) / playTimeInHours;\n    return priceHour\n  }\n};\n\nconst formatPlaytime = (minutes) => {\n  const hrs = Math.floor(minutes / 60);\n  let mins = minutes % 60;\n  if (mins > 10) {\n    mins.toString().length < 2 ? mins = mins * 10 : void(0);\n  }\n\n  if (!hrs) {\n    return `${mins}m`;\n  }\n\n  if (!mins) {\n    return `${hrs}h`;\n  }\n\n  return `${hrs}h ${mins}m`;\n};\n\nconst getTotalPrice = (game) => {\n  let total = game.price\n  if (game.dlc && game.dlc.length) {\n    game.dlc.forEach(dlc => total = total + dlc.price)\n  }\n\n  return total;\n};\n\nexport { countPriceHour, formatPlaytime, getTotalPrice }\n","import React, {Component} from \"react\"\nimport {countPriceHour, formatPlaytime, getTotalPrice} from \"../helpers\"\nimport axios from 'axios'\n\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.dlcNameRef = React.createRef();\n    this.dlcPriceRef = React.createRef();\n    this.selectRef = React.createRef();\n    this.state = {\n      value: \"\",\n      hidden: props.data.hidden,\n      dlcClassName: \"dlcWrapperHidden\"\n    }\n  }\n\n  handleInputSubmit = (event, appid) => {\n    if (event.keyCode === 13) {\n      this.props.saveData(appid, this.state.value);\n    } else {\n      this.setState({value: event.target.value});\n    }\n  };\n\n  handleDlc = (event, appid) => {\n    if (event.keyCode === 13) {\n      this.props.saveDataDlc(appid, this.dlcNameRef.current.value, this.dlcPriceRef.current.value)\n    }\n  };\n\n  definePriceHourClassName = (el) => {\n    let priceHour = countPriceHour(el);\n    // console.log(priceHour);\n    if (priceHour <= 10) {\n      return \"darkGreen\"\n    } else if (priceHour <= 50) {\n      return \"green\"\n    } else if (priceHour <= 100) {\n      return \"yellow\"\n    } else if (priceHour <= 200) {\n      return \"orange\"\n    } else if (priceHour >= 200) {\n      return \"red\"\n    }\n  };\n\n  hideGame = (appId) => {\n    // console.log(appId);\n    this.setState({gameClassName: \"hide\", hidden: true}, () => {\n      axios.patch(`http://steamify-api.61hub.com/v1/games/${appId}`, {hidden: this.state.hidden});\n    });\n\n  };\n\n  openDlc = (e) => {\n    if (this.state.dlcClassName == \"dlcWrapper\") {\n      this.setState({dlcClassName: \"dlcWrapperHidden\"})\n    } else {\n      this.setState({dlcClassName: \"dlcWrapper\"})\n    }\n  };\n\n  patchSubmitedData = (appId, e) => {\n    e.preventDefault();\n    const stringAppid = appId.toString();\n    const packId = this.selectRef.current.options[this.selectRef.current.selectedIndex].value;\n    const foundPack = this.props.packages.find((el) => el.packId == packId);\n\n    axios.patch(`http://steamify-api.61hub.com/v1/packs/${packId}`, {items: [...foundPack.items, appId]})\n      .then(() => {\n        this.props.onAddedToPack();\n        this.hideGame(appId);\n      })\n  };\n\n\n  render() {\n    const {data} = this.props;\n\n    return (\n      <>\n        <div className={`gameWrapper ${this.state.hidden ? \"hidden\" : \"\"}`}>\n          <div className=\"gameIcon\">\n            <img src={data.logo}/>\n          </div>\n\n          <div className='gameInformation'>\n            <div className=\"gameName\" onClick={e => this.openDlc(e)}>{data.name}</div>\n            <div className=\"gameMinorInfo\">\n              <div className={`gameHourPrice ${this.definePriceHourClassName(data)}`}></div>\n              <div className='gameIndex'>#{this.props.index + 1}</div>\n              <div className='gameTotalPrice'>{data.totalPrice}P</div>\n            </div>\n          </div>\n\n\n          <div className=\"gameDuration\">{formatPlaytime(data.playtimeForever)}</div>\n        </div>\n\n\n        <div className={`${this.state.dlcClassName} options`}>\n          <div>\n            <input className=\"priceInput\" defaultValue={data.price} type=\"number\"\n                   onKeyUp={(event) => this.handleInputSubmit(event, data.appId, data.playtimeForever)}/>\n          </div>\n          <div className=\"hideButton\">\n            <button onClick={() => this.hideGame(data.appId)}>Hide</button>\n          </div>\n          <div className=\"dropDownPacks\">\n            {data.type !== 'pack' &&\n              <form onSubmit={e => this.patchSubmitedData(data.appId, e)}>\n                <select ref={this.selectRef}>\n                  {this.props.packages && this.props.packages.map(pack => <option value={pack.packId}>{pack.name}</option>)}\n                </select>\n                <button>Package</button>\n              </form>\n            }\n          </div>\n        </div>\n\n        <div className={this.state.dlcClassName}>\n          {\n            data.type === 'pack' ?\n              <div className='packWrapper'>\n                {data.games.map((game) => <div>\n                  <div>{game.name}</div>\n                  <div>{formatPlaytime(game.playtimeForever)}</div>\n                </div>)}\n              </div>\n              :\n              <>\n                {data.dlc && data.dlc.map(el => <div className='dlc'>\n                  <div className='dlcName'>{el.name}</div>\n                  <div>{el.price}</div>\n                </div>)}\n                <div>\n                  <input className=\"dlcInput\" placeholder=\"DLC name\" type=\"text\"\n                         onKeyUp={(event) => this.handleDlc(event, data.appId)} ref={this.dlcNameRef}/>\n                </div>\n\n                <div>\n                  <input className=\"dlcInput\" placeholder=\"DLC price\" type=\"text\"\n                         onKeyUp={(event) => this.handleDlc(event, data.appId)} ref={this.dlcPriceRef}/>\n                </div>\n              </>\n          }\n        </div>\n\n      </>\n    )\n  }\n}\n\nexport default Game\n","import React from 'react'\nimport {formatPlaytime, getTotalPrice} from \"../helpers\";\nimport Game from \"./Game\";\n\nexport const Stats = ({ games, packs }) => {\n  let price = 0;\n  let playtimeForever = 0;\n\n  games.forEach(game => {\n    if (!game.hidden) {\n      price = price + getTotalPrice(game);\n      playtimeForever = playtimeForever + game.playtimeForever;\n    }\n  });\n\n  packs.forEach(pack => {\n    price = price + pack.price;\n    playtimeForever = playtimeForever + pack.playtimeForever;\n  });\n\n  return (\n    <>\n      <div className=\"stats\">\n        <div>{`Total price: ${price}P`}</div>\n        <div>{`Total playtime: ${Math.round(playtimeForever / 60)}hrs`}</div>\n      </div>\n      <div className=\"twoWeeks\">\n        <h3>Two weeks leaders:</h3>\n        {\n          games\n            .filter(g => g.playtimeTwoWeeks)\n            .sort((g1, g2) => g2.playtimeTwoWeeks - g1.playtimeTwoWeeks)\n            .map(g => {\n              const _g = {...g};\n              _g.playtimeForever = _g.playtimeTwoWeeks\n              return _g\n            })\n            .map((g, i) => <Game data={g} index={i}>{g.name} {formatPlaytime(g.playtimeTwoWeeks)}</Game>)\n        }\n      </div>\n\n    </>\n  )\n};\n","import React from 'react'\nimport { Classes, Drawer, Position, Radio, RadioGroup } from \"@blueprintjs/core\";\nimport { Field, Form } from \"react-final-form\";\n\nconst Settings = ({ isOpen, onClose, serverStatus, onSortChange, sortedBy, sortOrder, onSortOrderChange, addPack }) => {\n  return (\n    <Drawer\n      isOpen={isOpen}\n      onClose={onClose}\n      autoFocus={true}\n      canEscapeKeyClose={true}\n      canOutsideClickClose={true}\n      enforceFocus={true}\n      hasBackdrop={true}\n      position={Position.RIGHT}\n      usePortal={true}\n      size={Drawer.SIZE_SMALL}\n    >\n      <div className={Classes.DRAWER_BODY}>\n        <div className={Classes.DIALOG_BODY}>\n          <div className={`loadingState ${serverStatus}`}/>\n\n          <RadioGroup\n            label=\"Sort by:\"\n            onChange={onSortChange}\n            selectedValue={sortedBy}\n          >\n            <Radio label=\"Price\" value=\"totalPrice\"/>\n            <Radio label=\"Hours\" value=\"playtimeForever\"/>\n            <Radio label=\"Price per hour\" value=\"pricePerHour\"/>\n          </RadioGroup>\n\n          <RadioGroup\n            label=\"Order:\"\n            onChange={onSortOrderChange}\n            selectedValue={sortOrder}\n          >\n            <Radio label=\"Asc\" value=\"asc\"/>\n            <Radio label=\"Desc\" value=\"desc\"/>\n          </RadioGroup>\n          <Form\n            onSubmit={addPack}\n            render={({ handleSubmit }) => (\n              <form onSubmit={handleSubmit}>\n                <Field name=\"packName\" component=\"input\" type=\"text\" placeholder=\"Package name\"/>\n                <Field name=\"packPrice\" component=\"input\" type=\"number\" placeholder=\"Package price\"/>\n                <button type=\"submit\">Сохранить</button>\n              </form>\n            )}\n          />\n        </div>\n      </div>\n    </Drawer>\n  )\n};\n\nexport default Settings\n","import axios from \"axios\";\n\nexport const gamesActionsTypes = {\n  fetchGamesSuccess: 'FETCH_GAMES_SUCCESS',\n};\n\nconst fetchGamesSuccess = (games) => ({\n  type: gamesActionsTypes.fetchGamesSuccess,\n  games\n});\n\nexport const fetchGames = () => (\n  (dispatch) => (\n    axios\n      .get(`http://steamify-api.61hub.com/v1/games`)\n      .then(response => dispatch(fetchGamesSuccess(response.data)))\n  )\n);\n","import axios from \"axios\";\n\nexport const packsActionsTypes = {\n  fetchPacksSuccess: 'FETCH_PACKS_SUCCESS',\n};\n\nconst fetchPacksSuccess = (packs) => ({\n  type: packsActionsTypes.fetchPacksSuccess,\n  packs\n});\n\nexport const fetchPacks = () => (\n  (dispatch) => (\n    axios\n      .get(`http://steamify-api.61hub.com/v1/packs`)\n      .then(response => dispatch(fetchPacksSuccess(response.data)))\n  )\n);\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport Game from \"./components/Game\"\nimport * as _ from \"lodash\"\nimport { connect } from \"react-redux\"\nimport { Drawer, Position, Classes, Button, RadioGroup, Radio } from '@blueprintjs/core';\nimport \"../node_modules/normalize.css/normalize.css\";\nimport \"../node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"../node_modules/@blueprintjs/core/lib/css/blueprint.css\";\nimport './App.css';\nimport { Stats } from \"./components/Stats\";\nimport Settings from \"./components/Settings\";\nimport { fetchGames } from \"./redux/actions/games\";\nimport { fetchPacks } from \"./redux/actions/packs\";\n\nclass App extends Component {\n  state = {\n    serverStatus: \"\",\n    sortedBy: \"playtimeForever\",\n    sortOrder: \"desc\",\n    isSettingsOpen: false,\n    isStatsOpen: false\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    await this.props.fetchGames();\n    await this.props.fetchPacks();\n  };\n\n  saveData = (appId, price) => {\n    this.setState({ serverStatus: \"loading\" });\n    price = parseInt(price);\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appId}`, { price })\n      .then(response => this.setState({ serverStatus: \"success\" }))\n      .catch(response => this.setState({ serverStatus: \"error\" }));\n\n    this.props.gameUpdate({ appId, price });\n  };\n\n  saveDataDlc = (appid, nameValue, priceValue) => {\n    const clonedGames = [...this.props.games];\n    const elementToUpdatePrice = clonedGames.find((element) => element.appId == appid);\n\n    this.setState({ serverStatus: \"loading\" });\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appid}`, {\n      dlc: [...elementToUpdatePrice.dlc, {\n        name: nameValue,\n        price: priceValue\n      }]\n    })\n      .then(response => this.setState({ serverStatus: \"success\" }))\n      .catch(response => this.setState({ serverStatus: \"error\" }));\n\n\n    const indexElToUpdatePrice = clonedGames.findIndex((element) => element.appId == appid);\n    const updated = { ...elementToUpdatePrice };\n    updated.dlc = [...updated.dlc, { name: nameValue, price: priceValue }];\n    clonedGames[indexElToUpdatePrice] = updated;\n\n    this.props.dispatchGamesToStore(clonedGames);\n  };\n\n  addPack = ({ packName, packPrice }) => {\n    axios.post(`http://steamify-api.61hub.com/v1/packs`, { name: packName, price: packPrice })\n  };\n\n  render() {\n    const { games, packs } = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"controls\">\n          <Button className=\"bp3-minimal\" onClick={() => this.setState({ isSettingsOpen: true })}\n                  icon=\"settings\"/>\n          <Button className=\"bp3-minimal\" onClick={() => this.setState({ isStatsOpen: true })}\n                  icon=\"grouped-bar-chart\"/>\n          <Button className='bp3-minimal' onClick={this.fetchData} icon=\"refresh\"/>\n        </div>\n\n        <Settings\n          isOpen={this.state.isSettingsOpen}\n          onClose={() => this.setState({ isSettingsOpen: false })}\n          serverStatus={this.state.serverStatus}\n          onSortChange={e => this.setState({ sortedBy: e.currentTarget.value })}\n          sortedBy={this.state.sortedBy}\n          sortOrder={this.state.sortOrder}\n          onSortOrderChange={e => this.setState({ sortOrder: e.currentTarget.value })}\n          addPack={this.addPack}\n        />\n\n        <Drawer\n          isOpen={this.state.isStatsOpen}\n          onClose={() => this.setState({ isStatsOpen: false })}\n          autoFocus={true}\n          canEscapeKeyClose={true}\n          canOutsideClickClose={true}\n          enforceFocus={true}\n          hasBackdrop={true}\n          position={Position.RIGHT}\n          usePortal={true}\n          size={Drawer.SIZE_LARGE}\n        >\n          <div className={Classes.DRAWER_BODY}>\n            <div className={Classes.DIALOG_BODY}>\n              <Stats games={[...this.props.games]} packs={[...this.props.packs]}/>\n            </div>\n          </div>\n        </Drawer>\n\n        <div className=\"mainWrapper\">\n\n          {_.orderBy([...packs, ...games], [this.state.sortedBy, \"playtimeForever\"], [this.state.sortOrder])\n            .filter(el => !el.hidden)\n            .map((el, index) =>\n              <Game\n                key={el.appId}\n                data={el}\n                index={index}\n                saveData={this.saveData}\n                saveDataDlc={this.saveDataDlc}\n                packages={this.props.games.filter((el) => el.items)}\n                packId={this.state.packId}\n                onAddedToPack={this.fetchGamesData}\n              />\n            )}\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default connect(\n  ({ games, packs }) => ({ games, packs }),\n  (dispatch) => {\n    return {\n      fetchGames() {\n        return dispatch(fetchGames())\n      },\n\n      fetchPacks() {\n        return dispatch(fetchPacks())\n      },\n\n      gameUpdate(game) {\n        dispatch({\n          type: 'gameUpdate',\n          game\n        })\n      },\n\n      dispatchGamesToStore(data) {\n        dispatch({\n          data: data,\n          type: \"gamesToStore\"\n        })\n      }\n    }\n  }\n)(App);\n\n","import {createStore, compose, applyMiddleware} from \"redux\"\nimport thunk from \"redux-thunk\";\nimport { gamesReducer } from \"./reducers/games\";\n\nconst middlewares = window.__REDUX_DEVTOOLS_EXTENSION__ ? compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__()\n) : applyMiddleware(thunk);\n\nconst store = createStore(\n  gamesReducer,\n  middlewares\n);\n\nexport default store\n","import { countPriceHour, getTotalPrice } from \"../../helpers\";\nimport { gamesActionsTypes } from \"../actions/games\";\nimport { packsActionsTypes } from \"../actions/packs\";\n\nexport const gamesReducer = (state, action) => {\n  switch (action.type) {\n    case gamesActionsTypes.fetchGamesSuccess:\n      action.games.forEach(game => {\n        if (isNaN(parseInt(game.price))) {\n          game.price = 0\n        } else {\n          game.price = parseInt(game.price)\n        }\n        game.pricePerHour = countPriceHour(game);\n        game.totalPrice = getTotalPrice(game);\n      });\n\n      return {\n        ...state,\n        games: action.games\n      };\n\n    case packsActionsTypes.fetchPacksSuccess:\n      const {packs} = action\n\n      packs.forEach(pack => {\n        pack.games = [];\n        pack.type = 'pack';\n        pack.items.forEach(id => {\n          const foundGame = state.games.find(el => el.appId === parseInt(id));\n          if (foundGame) {\n            pack.games.push(foundGame);\n          }\n        });\n\n        pack.playtimeForever = 0;\n        if (pack.games && pack.games.length) {\n          pack.games.forEach(g => pack.playtimeForever += g.playtimeForever);\n          pack.logo = pack.games[Math.floor(Math.random() * (pack.games.length - 1))].logo;\n          pack.pricePerHour = countPriceHour(pack);\n        }\n        pack.totalPrice = pack.price\n      });\n\n      return {\n        ...state,\n        packs\n      };\n\n    case 'gamesToStore':\n      return {\n        ...state,\n        games: [...state.games, ...action.data]\n      };\n\n    case 'gameUpdate':\n      const game = state.games.map(item => {\n        if (item.appId === action.game.appId) {\n          return {...item, ...action.game}\n        }\n        return item;\n      });\n\n      return {\n        ...state,\n        games: game\n      };\n\n    case 'packsToStore':\n      return {\n        ...state,\n        games: [...state.games, ...action.packs]\n      };\n  }\n  return {\n    games: [],\n    packs: []\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}
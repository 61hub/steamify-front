{"version":3,"sources":["helpers.js","Game.js","App.js","serviceWorker.js","store.js","index.js"],"names":["countPriceHour","game","dlcPrice","dlc","length","forEach","dlcEl","price","playtimeForever","playTimeInHours","Math","round","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputSubmit","event","appid","keyCode","saveData","state","value","setState","target","handleDlc","saveDataDlc","dlcNameRef","current","dlcPriceRef","console","log","definePriceHourClassName","el","priceHour","hideGame","appId","gameClassName","hidden","axios","patch","concat","openDlc","e","dlcClassName","React","createRef","data","_this2","react_default","a","createElement","Fragment","className","index","src","icon","onClick","name","colSpan","playtimeForeverReadable","replace","defaultValue","type","onKeyUp","map","placeholder","ref","Component","App","fetchData","get","then","response","mappedData","isNaN","parseInt","pricePerHour","filter","dispatchGamesToStore","serverStatus","catch","clonedGames","toConsumableArray","games","elementToUpdatePrice","find","element","indexElToUpdatePrice","findIndex","updated","objectSpread","nameValue","priceValue","handleSortClick","sortedBy","handleSortOrder","sortOrder","handleRefreshButton","gamePriceStatus","onChange","_","src_Game","key","connect","dispatch","Boolean","window","location","hostname","match","store","createStore","action","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0177fe70.chunk.js","sourcesContent":["export const countPriceHour = (game) => {\n  let dlcPrice = 0;\n\n  if(game.dlc.length > 0) {\n    game.dlc.forEach((dlcEl) => {\n      dlcPrice = dlcPrice + dlcEl.price;\n    })\n  }\n\n  let priceHour;\n  if (game.playtimeForever <= 60) {\n    priceHour = game.price + dlcPrice;\n    return priceHour\n  } else {\n    let playTimeInHours = game.playtimeForever / 60;\n    priceHour = Math.round((game.price  + dlcPrice) / playTimeInHours);\n    return priceHour\n  }\n};\n\n\n","import React, {Component} from \"react\"\nimport {countPriceHour} from \"./helpers\"\nimport axios from 'axios'\n\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.dlcNameRef = React.createRef();\n    this.dlcPriceRef = React.createRef();\n    this.state = {\n      value: \"\",\n      hidden: props.data.hidden,\n      dlcClassName: \"dlcWrapperHidden\"\n\n    }\n  }\n\n  handleInputSubmit = (event, appid) => {\n    if (event.keyCode == 13) {\n      this.props.saveData(appid, this.state.value);\n    }\n    else {\n      this.setState({value: event.target.value});\n    }\n  };\n  handleDlc = (event, appid) => {\n    if (event.keyCode == 13) {\n      this.props.saveDataDlc(appid, this.dlcNameRef.current.value, this.dlcPriceRef.current.value)\n      console.log(this.dlcNameRef.current.value)\n    }\n  }\n\n  definePriceHourClassName = (el) => {\n    let priceHour = countPriceHour(el);\n    console.log(priceHour);\n    if (priceHour <= 10) {\n      return \"darkGreen\"\n    } else if (priceHour <= 50) {\n      return \"green\"\n    } else if (priceHour <= 100) {\n      return \"yellow\"\n    } else if (priceHour <= 200) {\n      return \"orange\"\n    } else if (priceHour >= 200) {\n      return \"red\"\n    }\n  };\n\n  hideGame = (appId) => {\n    console.log(appId);\n    this.setState({gameClassName: \"hide\", hidden: true}, () => {\n      axios.patch(`http://steamify-api.61hub.com/v1/games/${appId}`, {hidden: this.state.hidden});\n    });\n\n  };\n  openDlc = (e) => {\n    if (this.state.dlcClassName == \"dlcWrapper\") {\n      this.setState({dlcClassName: \"dlcWrapperHidden\"})\n    } else {\n      this.setState({dlcClassName: \"dlcWrapper\"})\n\n    }\n  }\n\n  render() {\n    return(\n    <>\n      <div className={`gameWrapper ${this.state.hidden ? \"hidden\" : \"\"}`}>\n        <div className=\"gameHourPriceWrapper\">\n          <div className={`gameHourPrice ${this.definePriceHourClassName(this.props.data)}`}></div>\n        </div>\n        <div>{this.props.index + 1}</div>\n        <div className=\"gameIcon\">\n          <img src={this.props.data.icon}></img>\n        </div>\n        <div className=\"gameName\" onClick={(e) => this.openDlc(e)}>{this.props.data.name}</div>\n\n\n        <div colSpan=\"2\"\n             className=\"gameDuration\">{this.props.data.playtimeForeverReadable.replace(\" days\", \"d\").replace(\" hours\", \"h\").replace(\" minutes\", \"m\")}</div>\n        <div>\n          <input className=\"priceInput\" defaultValue={this.props.data.price} type=\"number\"\n                 onKeyUp={(event) => this.handleInputSubmit(event, this.props.data.appId, this.props.data.playtimeForever)}/>\n        </div>\n        <div>\n          <button onClick={() => this.hideGame(this.props.data.appId)}>Hide</button>\n        </div>\n      </div>\n    <div className={this.state.dlcClassName}>\n      {\n        this.props.data.dlc.length > 0 ?\n          <div>\n            {this.props.data.dlc.map((el) => <div>\n              <div>{el.name}</div>\n              <div>{el.price}</div>\n            </div>)}\n            <div><input className=\"dlcInput\" placeholder=\"DLC name\" type=\"text\"\n                        onKeyUp={(event) => this.handleDlc(event, this.props.data.appId)} ref={this.dlcNameRef}/>\n            </div>\n\n            <div>\n              <input className=\"dlcInput\" placeholder=\"DLC price\" type=\"text\"\n                     onKeyUp={(event) => this.handleDlc(event, this.props.data.appId)} ref={this.dlcPriceRef}/>\n            </div>\n          </div>\n          :\n          <div>\n            <div><input className=\"dlcInput\" placeholder=\"DLC name\" type=\"text\"\n                        onKeyUp={(event) => this.handleDlc(event, this.props.data.appId)} ref={this.dlcNameRef}/>\n            </div>\n\n            <div>\n              <input className=\"dlcInput\" placeholder=\"DLC price\" type=\"text\"\n                     onKeyUp={(event) => this.handleDlc(event, this.props.data.appId)} ref={this.dlcPriceRef}/>\n            </div>\n          </div>\n      }\n    </div>\n\n    </>\n    )\n  }\n}\nexport default Game","import React, {Component} from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport Game from \"./Game\"\nimport {countPriceHour} from \"./helpers\"\nimport * as _ from \"lodash\"\nimport {connect} from \"react-redux\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      games: [],\n      serverStatus: \"\",\n      gamePriceStatus: \"\",\n      sortedBy: \"pricePerHour\",\n      sortOrder: \"desc\",\n    };\n  }\n  fetchData = () => {\n    axios.get(`http://steamify-api.61hub.com/v1/games`)\n      .then(response => {\n        const mappedData = response.data.map((el) => {\n          if (isNaN(parseInt(el.price))) {\n            el.price = 0\n          } else {\n            el.price = parseInt(el.price)\n          }\n          const pricePerHour = countPriceHour(el);\n          el.pricePerHour = pricePerHour\n          return el\n        }).filter((el) => el.hidden == false )\n        this.props.dispatchGamesToStore(mappedData);\n\n      })\n  }\n  componentDidMount() {\n   this.fetchData();\n  }\n\n  saveData = (appid, value) => {\n    this.setState({serverStatus: \"loading\"});\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appid}`, {price: parseInt(value)})\n      .then(response => this.setState({serverStatus: \"success\"}))\n      .catch(response => this.setState({serverStatus: \"error\"}));\n    const clonedGames = [...this.props.games];\n    const elementToUpdatePrice = clonedGames.find((element) => element.appId == appid);\n    const indexElToUpdatePrice = clonedGames.findIndex((element) => element.appId == appid);\n    const updated = {...elementToUpdatePrice};\n    updated.price = parseInt(value);\n    clonedGames[indexElToUpdatePrice] = updated;\n    this.props.dispatchGamesToStore(clonedGames);\n  };\n  saveDataDlc = (appid, nameValue, priceValue) => {\n    const clonedGames = [...this.props.games];\n    const elementToUpdatePrice = clonedGames.find((element) => element.appId == appid);\n\n    this.setState({serverStatus: \"loading\"});\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appid}`, {dlc: [...elementToUpdatePrice.dlc, {name:nameValue, price:priceValue}]})\n      .then(response => this.setState({serverStatus: \"success\"}))\n      .catch(response => this.setState({serverStatus: \"error\"}));\n\n\n    const indexElToUpdatePrice = clonedGames.findIndex((element) => element.appId == appid);\n    const updated = {...elementToUpdatePrice};\n    updated.dlc = [...updated.dlc, {name: nameValue, price: priceValue}];\n    clonedGames[indexElToUpdatePrice] = updated;\n    console.log(clonedGames[indexElToUpdatePrice]);\n\n    this.props.dispatchGamesToStore(clonedGames);\n  };\n  handleSortClick = (type) => {\n    console.log(type);\n    this.setState({sortedBy: type})\n  };\n  handleSortOrder = (type) => {\n    this.setState({sortOrder: type})\n  };\n  handleRefreshButton = () => {\n    this.fetchData();\n  }\n  render() {\n\n    let price = 0;\n    let playtimeForever = 0;\n     this.props.games.forEach((el) => {\n      price = price + el.price;\n      playtimeForever = playtimeForever + el.playtimeForever;\n\n    });\n    return (\n      <div className=\"container\">\n        <div className=\"overlay\">\n          <div className={`loadingState ${this.state.serverStatus}`}></div>\n          <div>\n            Sort by:\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"price\")}/>Price</div>\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"playtimeForever\")}/>Hours</div>\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"pricePerHour\")}/>Price per hour</div>\n            <div><input type=\"radio\" name=\"order\" onChange={() => this.handleSortOrder(\"asc\")}/>Asc</div>\n            <div><input type=\"radio\" name=\"order\" onChange={() => this.handleSortOrder(\"desc\")}/>Desc</div>\n          </div>\n          <div>{`Total price: ${price}`}</div>\n          <div>{`Total playtime: ${Math.round(playtimeForever / 60 / 24)}`}</div>\n          <div onClick={this.handleRefreshButton}><button>Refresh</button></div>\n          <div className=\"mainWrapper\">\n\n          <div>\n              <div>Game's name</div>\n              <div>Game play duration</div>\n              <div>Price</div>\n            </div>\n\n\n            {_.orderBy(this.props.games, [this.state.sortedBy, \"playtimeForever\"], [this.state.sortOrder])\n              .map((el, index) =>\n                <Game key={el.appId} data={el} index={index} saveData={this.saveData} saveDataDlc={this.saveDataDlc}/>\n              )}\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    games: state.games\n  }),\n  (dispatch) => {\n    return {\n    dispatchGamesToStore (data) {\n      dispatch({\n        data: data,\n        type: \"gamesToStore\"\n      })\n    }\n    }\n  }\n)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore} from \"redux\"\n\n\n\nfunction gamesReducer(state, action) {\n  switch (action.type) {\n    case 'gamesToStore':\n      return {\n        games: [...action.data]\n      }\n  }\n return {\n   games: []\n }\n}\nconst store = createStore(gamesReducer);\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\"\nimport store from  \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["helpers.js","Game.js","App.js","serviceWorker.js","store.js","index.js"],"names":["countPriceHour","game","dlcPrice","items","dlc","length","forEach","dlcEl","price","playtimeForever","playTimeInHours","Math","round","formatPlaytime","minutes","hrs","mins","concat","getTotalPrice","total","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputSubmit","event","appid","keyCode","saveData","state","value","setState","target","handleDlc","saveDataDlc","dlcNameRef","current","dlcPriceRef","definePriceHourClassName","el","priceHour","hideGame","appId","gameClassName","hidden","axios","patch","openDlc","e","dlcClassName","patchSubmitedData","preventDefault","stringAppid","toString","console","log","packId","selectRef","options","selectedIndex","foundPack","packages","find","toConsumableArray","then","onAddedToPack","React","createRef","data","_this2","totalPrice","react_default","a","createElement","Fragment","className","src","logo","onClick","name","index","defaultValue","type","onKeyUp","onSubmit","ref","map","pack","games","placeholder","Component","App","fetchGamesData","get","response","mappedData","isNaN","parseInt","pricePerHour","fetchPacksData","gamesData","id","foundGame","push","g","dataFetched","serverStatus","catch","gameUpdate","nameValue","priceValue","clonedGames","elementToUpdatePrice","element","indexElToUpdatePrice","findIndex","updated","objectSpread","dispatchGamesToStore","handleSortClick","sortedBy","handleSortOrder","sortOrder","handleRefreshButton","addPack","inputName","formInputNameRef","inputPrice","formInputPriceRef","post","gamePriceStatus","packs","onChange","_","filter","src_Game","key","connect","dispatch","dispatchPacksToStore","dispatchNewItems","item","Boolean","window","location","hostname","match","store","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c417bb9b.chunk.js","sourcesContent":["const countPriceHour = (game) => {\n  let dlcPrice = 0;\n\n  if(!game.items && game.dlc.length > 0) {\n    game.dlc.forEach((dlcEl) => {\n      dlcPrice = dlcPrice + dlcEl.price;\n    })\n  }\n\n  let priceHour;\n  if (game.playtimeForever <= 60) {\n    priceHour = game.price + dlcPrice;\n    return priceHour\n  } else {\n    let playTimeInHours = game.playtimeForever / 60;\n    priceHour = Math.round((game.price  + dlcPrice) / playTimeInHours);\n    return priceHour\n  }\n};\n\nconst formatPlaytime = (minutes) => {\n  const hrs = Math.round(minutes / 60);\n  const mins = minutes % 60;\n\n  return `${hrs}h ${mins}m`;\n};\n\nconst getTotalPrice = (game) => {\n  let total = game.price\n  if (game.dlc && game.dlc.length) {\n    game.dlc.forEach(dlc => total = total + dlc.price)\n  }\n\n  return total;\n};\n\nexport { countPriceHour, formatPlaytime, getTotalPrice }\n","import React, {Component} from \"react\"\nimport {countPriceHour, formatPlaytime, getTotalPrice} from \"./helpers\"\nimport axios from 'axios'\n\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.dlcNameRef = React.createRef();\n    this.dlcPriceRef = React.createRef();\n    this.selectRef = React.createRef();\n    this.state = {\n      value: \"\",\n      hidden: props.data.hidden,\n      dlcClassName: \"dlcWrapperHidden\"\n    }\n  }\n\n  handleInputSubmit = (event, appid) => {\n    if (event.keyCode == 13) {\n      this.props.saveData(appid, this.state.value);\n    } else {\n      this.setState({value: event.target.value});\n    }\n  };\n\n  handleDlc = (event, appid) => {\n    if (event.keyCode == 13) {\n      this.props.saveDataDlc(appid, this.dlcNameRef.current.value, this.dlcPriceRef.current.value)\n      // console.log(this.dlcNameRef.current.value)\n    }\n  };\n\n  definePriceHourClassName = (el) => {\n    let priceHour = countPriceHour(el);\n    // console.log(priceHour);\n    if (priceHour <= 10) {\n      return \"darkGreen\"\n    } else if (priceHour <= 50) {\n      return \"green\"\n    } else if (priceHour <= 100) {\n      return \"yellow\"\n    } else if (priceHour <= 200) {\n      return \"orange\"\n    } else if (priceHour >= 200) {\n      return \"red\"\n    }\n  };\n\n  hideGame = (appId) => {\n    // console.log(appId);\n    this.setState({gameClassName: \"hide\", hidden: true}, () => {\n      axios.patch(`http://steamify-api.61hub.com/v1/games/${appId}`, {hidden: this.state.hidden});\n    });\n\n  };\n\n  openDlc = (e) => {\n    if (this.state.dlcClassName == \"dlcWrapper\") {\n      this.setState({dlcClassName: \"dlcWrapperHidden\"})\n    } else {\n      this.setState({dlcClassName: \"dlcWrapper\"})\n    }\n  };\n\n  patchSubmitedData = (appId, e) => {\n    e.preventDefault();\n    const stringAppid = appId.toString();\n    console.log(stringAppid);\n    const packId = this.selectRef.current.options[this.selectRef.current.selectedIndex].value;\n    const foundPack = this.props.packages.find((el) => el.packId == packId);\n\n    axios.patch(`http://steamify-api.61hub.com/v1/packs/${packId}`, {items: [...foundPack.items, appId]})\n      .then(() => {\n        this.props.onAddedToPack();\n        this.hideGame(appId);\n\n      })\n\n  };\n\n\n  render() {\n    const {data} = this.props;\n\n    let totalPrice = getTotalPrice(data);\n    return (\n      <>\n        <div className={`gameWrapper ${this.state.hidden ? \"hidden\" : \"\"}`}>\n\n          <div className=\"gameIcon\">\n            <img src={data.logo}/>\n          </div>\n\n          <div className='gameInformation'>\n            <div className=\"gameName\" onClick={e => this.openDlc(e)}>{data.name}</div>\n            <div className=\"gameMinorInfo\">\n              <div className={`gameHourPrice ${this.definePriceHourClassName(data)}`}></div>\n              <div className='gameIndex'>#{this.props.index + 1}</div>\n              <div className='gameTotalPrice'>{totalPrice}P</div>\n            </div>\n          </div>\n\n\n          <div className=\"gameDuration\">{formatPlaytime(data.playtimeForever)}</div>\n        </div>\n\n\n        <div className={`${this.state.dlcClassName} options`}>\n          <div>\n            <input className=\"priceInput\" defaultValue={data.price} type=\"number\"\n                   onKeyUp={(event) => this.handleInputSubmit(event, data.appId, data.playtimeForever)}/>\n          </div>\n          <div className=\"hideButton\">\n            <button onClick={() => this.hideGame(data.appId)}>Hide</button>\n          </div>\n          <div className=\"dropDownPacks\">\n            <form onSubmit={(e) => this.patchSubmitedData(data.appId, e)}>\n              <select ref={this.selectRef}>\n\n                {data.items ? null : this.props.packages.map((pack) => <option\n                  value={pack.packId}>{pack.name}</option>)}\n\n\n              </select>\n              <button>Package</button>\n            </form>\n\n          </div>\n        </div>\n\n        <div className={this.state.dlcClassName}>\n          {\n            data.type === 'pack' ?\n              <div className='packWrapper'>\n                {data.games.map((game) => <div><div>{game.name}</div> <div>{formatPlaytime(game.playtimeForever)}</div></div>)}\n              </div>\n              :\n              <>\n                {data.dlc.map(el => <div className='dlc'>\n                  <div className='dlcName'>{el.name}</div>\n                  <div>{el.price}</div>\n                </div>)}\n                <div>\n                  <input className=\"dlcInput\" placeholder=\"DLC name\" type=\"text\"\n                         onKeyUp={(event) => this.handleDlc(event, data.appId)} ref={this.dlcNameRef}/>\n                </div>\n\n                <div>\n                  <input className=\"dlcInput\" placeholder=\"DLC price\" type=\"text\"\n                         onKeyUp={(event) => this.handleDlc(event, data.appId)} ref={this.dlcPriceRef}/>\n                </div>\n              </>\n          }\n        </div>\n\n      </>\n    )\n  }\n}\n\nexport default Game\n","import React, {Component} from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport Game from \"./Game\"\nimport {countPriceHour, getTotalPrice} from \"./helpers\"\nimport * as _ from \"lodash\"\nimport {connect} from \"react-redux\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.formInputNameRef = React.createRef();\n    this.formInputPriceRef = React.createRef();\n\n    this.state = {\n      games: [],\n      serverStatus: \"\",\n      gamePriceStatus: \"\",\n      sortedBy: \"playtimeForever\",\n      sortOrder: \"desc\",\n      packs: [],\n    };\n  }\n\n  fetchGamesData = () => {\n    axios.get(`http://steamify-api.61hub.com/v1/games`)\n      .then(response => {\n        const mappedData = response.data.map((el) => {\n          if (isNaN(parseInt(el.price))) {\n            el.price = 0\n          } else {\n            el.price = parseInt(el.price)\n          }\n          const pricePerHour = countPriceHour(el);\n          el.pricePerHour = pricePerHour;\n          return el\n        })\n        this.fetchPacksData(mappedData)\n      })\n  };\n\n  fetchPacksData = (gamesData) => {\n    axios.get(`http://steamify-api.61hub.com/v1/packs`)\n      .then(response => {\n        response.data.forEach((pack) => {\n          pack.games = [];\n          pack.type = 'pack';\n          pack.items.forEach((id) => {\n            const foundGame = gamesData.find((el) => {\n              return el.appId === parseInt(id)\n            });\n            pack.games.push(foundGame);\n          });\n\n          pack.playtimeForever = 0;\n          if (pack.games && pack.games.length) {\n            pack.games.forEach(g => pack.playtimeForever += g.playtimeForever);\n          }\n        });\n\n        this.props.dataFetched([...response.data, ...gamesData]);\n      })\n  };\n\n  componentDidMount() {\n    this.fetchGamesData();\n  }\n\n  saveData = (appId, price) => {\n    this.setState({serverStatus: \"loading\"});\n    price = parseInt(price);\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appId}`, {price})\n      .then(response => this.setState({serverStatus: \"success\"}))\n      .catch(response => this.setState({serverStatus: \"error\"}));\n\n    this.props.gameUpdate({appId, price});\n  };\n\n  saveDataDlc = (appid, nameValue, priceValue) => {\n    const clonedGames = [...this.props.games];\n    const elementToUpdatePrice = clonedGames.find((element) => element.appId == appid);\n\n    this.setState({serverStatus: \"loading\"});\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appid}`, {\n      dlc: [...elementToUpdatePrice.dlc, {\n        name: nameValue,\n        price: priceValue\n      }]\n    })\n      .then(response => this.setState({serverStatus: \"success\"}))\n      .catch(response => this.setState({serverStatus: \"error\"}));\n\n\n    const indexElToUpdatePrice = clonedGames.findIndex((element) => element.appId == appid);\n    const updated = {...elementToUpdatePrice};\n    updated.dlc = [...updated.dlc, {name: nameValue, price: priceValue}];\n    clonedGames[indexElToUpdatePrice] = updated;\n    // console.log(clonedGames[indexElToUpdatePrice]);\n\n    this.props.dispatchGamesToStore(clonedGames);\n  };\n\n  handleSortClick = (type) => {\n    // console.log(type);\n    this.setState({sortedBy: type})\n  };\n\n  handleSortOrder = (type) => {\n    this.setState({sortOrder: type})\n  };\n\n  handleRefreshButton = () => {\n    this.fetchGamesData();\n  };\n\n  addPack = (e) => {\n    e.preventDefault();\n    const inputName = this.formInputNameRef.current.value;\n    const inputPrice = this.formInputPriceRef.current.value;\n    axios.post(`http://steamify-api.61hub.com/v1/packs`, {name: inputName, price: inputPrice})\n  };\n\n  render() {\n    let price = 0;\n    let playtimeForever = 0;\n    this.props.games.forEach((el) => {\n      if (!el.hidden) {\n        price = price + getTotalPrice(el);\n        playtimeForever = playtimeForever + el.playtimeForever;\n      }\n    });\n    return (\n      <div className=\"container\">\n        <div className=\"overlay\">\n          <div className={`loadingState ${this.state.serverStatus}`}></div>\n          <div className=\"menu\">\n            Sort by:\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"price\")}/>Price</div>\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"playtimeForever\")}/>Hours</div>\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"pricePerHour\")}/>Price per hour\n            </div>\n            <div><input type=\"radio\" name=\"order\" onChange={() => this.handleSortOrder(\"asc\")}/>Asc</div>\n            <div><input type=\"radio\" name=\"order\" onChange={() => this.handleSortOrder(\"desc\")}/>Desc</div>\n            <div>{`Total price: ${price}P`}</div>\n            <div>{`Total playtime: ${Math.round(playtimeForever / 60)}hrs`}</div>\n            <div onClick={this.handleRefreshButton}>\n              <button>Refresh</button>\n            </div>\n          </div>\n          <div className=\"packageWrapper\">\n            <form onSubmit={this.addPack}>\n              <input type=\"text\" placeholder=\"Package name\" ref={this.formInputNameRef}/>\n              <input type=\"number\" placeholder=\"Package price\" ref={this.formInputPriceRef}/>\n              <button>Сохранить</button>\n            </form>\n          </div>\n\n          <div className=\"mainWrapper\">\n\n            {_.orderBy(this.props.games, [this.state.sortedBy, \"playtimeForever\"], [this.state.sortOrder])\n              .filter((el) => el.hidden != true)\n              .map((el, index) =>\n                <Game\n                  key={el.appId}\n                  data={el}\n                  index={index}\n                  saveData={this.saveData}\n                  saveDataDlc={this.saveDataDlc}\n                  packages={this.props.games.filter((el) => el.items)}\n                  packId={this.state.packId}\n                  onAddedToPack={this.fetchGamesData}\n                />\n              )}\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    games: state.games\n  }),\n  (dispatch) => {\n    return {\n      dataFetched (data) {\n        dispatch({\n          type: 'dataFetched',\n          data\n        })\n      },\n\n      gameUpdate (game) {\n        dispatch({\n          type: 'gameUpdate',\n          game\n        })\n      },\n\n      dispatchGamesToStore (data) {\n        dispatch({\n          data: data,\n          type: \"gamesToStore\"\n        })\n      },\n      dispatchPacksToStore (packs) {\n        dispatch({\n          packs: packs,\n          type: \"packsToStore\"\n        })\n      },\n      dispatchNewItems (items, packId) {\n        dispatch({\n          packId: packId,\n          item: items,\n          type: \"newItem\"\n        })\n      }\n    }\n  }\n)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore} from \"redux\"\n\n\n\nfunction gamesReducer(state, action) {\n  switch (action.type) {\n    case 'dataFetched':\n      return {\n        games: action.data\n      };\n\n    case 'gamesToStore':\n      return {\n        games: [...state.games, ...action.data]\n      };\n\n    case 'gameUpdate':\n      const games = state.games.map(item => {\n        if (item.appId === action.game.appId) {\n          return {...item, ...action.game}\n        }\n        return item;\n      });\n\n      return {games}\n\n    case 'packsToStore':\n      return {\n        games: [...state.games, ...action.packs]\n      };\n\n    case 'newItem':\n      const packId = action.packId\n      const item = action.item\n      const foundPack = {...state.games.find((game) => game.packId == packId)}\n      foundPack.items = [...foundPack.items, item]\n\n  }\n return {\n   games: []\n }\n}\nconst store = createStore(\n  gamesReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\"\nimport store from  \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
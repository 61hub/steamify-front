{"version":3,"sources":["helpers.js","Game.js","App.js","serviceWorker.js","store.js","index.js"],"names":["countPriceHour","game","dlcPrice","items","dlc","length","forEach","dlcEl","price","playtimeForever","playTimeInHours","Math","round","formatPlaytime","minutes","hrs","mins","concat","getTotalPrice","total","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputSubmit","event","appid","keyCode","saveData","state","value","setState","target","handleDlc","saveDataDlc","dlcNameRef","current","dlcPriceRef","definePriceHourClassName","el","priceHour","hideGame","appId","gameClassName","hidden","axios","patch","openDlc","e","dlcClassName","patchSubmitedData","preventDefault","stringAppid","toString","console","log","packId","selectRef","options","selectedIndex","foundPack","packages","find","toConsumableArray","React","createRef","data","_this2","totalPrice","react_default","a","createElement","Fragment","className","src","logo","onClick","name","index","defaultValue","type","onKeyUp","onSubmit","ref","map","pack","games","placeholder","Component","App","fetchGamesData","get","then","response","mappedData","isNaN","parseInt","pricePerHour","dispatchGamesToStore","fetchPacksData","id","foundGame","push","g","dispatchPacksToStore","serverStatus","catch","clonedGames","elementToUpdatePrice","element","indexElToUpdatePrice","findIndex","updated","objectSpread","nameValue","priceValue","handleSortClick","sortedBy","handleSortOrder","sortOrder","handleRefreshButton","addPack","inputName","formInputNameRef","inputPrice","formInputPriceRef","post","gamePriceStatus","packs","onChange","_","filter","src_Game","key","connect","dispatch","dispatchNewItems","item","Boolean","window","location","hostname","match","store","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2298f3d.chunk.js","sourcesContent":["const countPriceHour = (game) => {\n  let dlcPrice = 0;\n\n  if(!game.items && game.dlc.length > 0) {\n    game.dlc.forEach((dlcEl) => {\n      dlcPrice = dlcPrice + dlcEl.price;\n    })\n  }\n\n  let priceHour;\n  if (game.playtimeForever <= 60) {\n    priceHour = game.price + dlcPrice;\n    return priceHour\n  } else {\n    let playTimeInHours = game.playtimeForever / 60;\n    priceHour = Math.round((game.price  + dlcPrice) / playTimeInHours);\n    return priceHour\n  }\n};\n\nconst formatPlaytime = (minutes) => {\n  const hrs = Math.round(minutes / 60);\n  const mins = minutes % 60;\n\n  return `${hrs}h ${mins}m`;\n};\n\nconst getTotalPrice = (game) => {\n  let total = game.price\n  if (game.dlc && game.dlc.length) {\n    game.dlc.forEach(dlc => total = total + dlc.price)\n  }\n\n  return total;\n};\n\nexport { countPriceHour, formatPlaytime, getTotalPrice }\n","import React, {Component} from \"react\"\nimport {countPriceHour, formatPlaytime, getTotalPrice} from \"./helpers\"\nimport axios from 'axios'\n\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.dlcNameRef = React.createRef();\n    this.dlcPriceRef = React.createRef();\n    this.selectRef = React.createRef();\n    this.state = {\n      value: \"\",\n      hidden: props.data.hidden,\n      dlcClassName: \"dlcWrapperHidden\"\n    }\n  }\n\n  handleInputSubmit = (event, appid) => {\n    if (event.keyCode == 13) {\n      this.props.saveData(appid, this.state.value);\n    } else {\n      this.setState({value: event.target.value});\n    }\n  };\n\n  handleDlc = (event, appid) => {\n    if (event.keyCode == 13) {\n      this.props.saveDataDlc(appid, this.dlcNameRef.current.value, this.dlcPriceRef.current.value)\n      // console.log(this.dlcNameRef.current.value)\n    }\n  };\n\n  definePriceHourClassName = (el) => {\n    let priceHour = countPriceHour(el);\n    // console.log(priceHour);\n    if (priceHour <= 10) {\n      return \"darkGreen\"\n    } else if (priceHour <= 50) {\n      return \"green\"\n    } else if (priceHour <= 100) {\n      return \"yellow\"\n    } else if (priceHour <= 200) {\n      return \"orange\"\n    } else if (priceHour >= 200) {\n      return \"red\"\n    }\n  };\n\n  hideGame = (appId) => {\n    // console.log(appId);\n    this.setState({gameClassName: \"hide\", hidden: true}, () => {\n      axios.patch(`http://steamify-api.61hub.com/v1/games/${appId}`, {hidden: this.state.hidden});\n    });\n\n  };\n\n  openDlc = (e) => {\n    if (this.state.dlcClassName == \"dlcWrapper\") {\n      this.setState({dlcClassName: \"dlcWrapperHidden\"})\n    } else {\n      this.setState({dlcClassName: \"dlcWrapper\"})\n    }\n  };\n\n  patchSubmitedData = (appId, e) => {\n    e.preventDefault();\n    const stringAppid = appId.toString();\n    console.log(stringAppid);\n    const packId = this.selectRef.current.options[this.selectRef.current.selectedIndex].value;\n    const foundPack = this.props.packages.find((el) => el.packId == packId);\n\n    axios.patch(`http://steamify-api.61hub.com/v1/packs/${packId}`, {items: [...foundPack.items, appId]});\n    this.hideGame(appId);\n  };\n\n\n  render() {\n    const {data} = this.props;\n\n    let totalPrice = getTotalPrice(data);\n    return (\n      <>\n        <div className={`gameWrapper ${this.state.hidden ? \"hidden\" : \"\"}`}>\n\n          <div className=\"gameIcon\">\n            <img src={data.logo}/>\n          </div>\n\n          <div className='gameInformation'>\n            <div className=\"gameName\" onClick={e => this.openDlc(e)}>{data.name}</div>\n            <div className=\"gameMinorInfo\">\n              <div className={`gameHourPrice ${this.definePriceHourClassName(data)}`}></div>\n              <div className='gameIndex'>#{this.props.index + 1}</div>\n              <div className='gameTotalPrice'>{totalPrice}P</div>\n            </div>\n          </div>\n\n\n          <div className=\"gameDuration\">{formatPlaytime(data.playtimeForever)}</div>\n        </div>\n\n\n        <div className={`${this.state.dlcClassName} options`}>\n          <div>\n            <input className=\"priceInput\" defaultValue={data.price} type=\"number\"\n                   onKeyUp={(event) => this.handleInputSubmit(event, data.appId, data.playtimeForever)}/>\n          </div>\n          <div className=\"hideButton\">\n            <button onClick={() => this.hideGame(data.appId)}>Hide</button>\n          </div>\n          <div className=\"dropDownPacks\">\n            <form onSubmit={(e) => this.patchSubmitedData(data.appId, e)}>\n              <select ref={this.selectRef}>\n\n                {data.items ? null : this.props.packages.map((pack) => <option\n                  value={pack.packId}>{pack.name}</option>)}\n\n\n              </select>\n              <button>Package</button>\n            </form>\n\n          </div>\n        </div>\n\n        <div className={this.state.dlcClassName}>\n          {\n            data.type === 'pack' ?\n              <div>\n                {data.games.map((game) => `${game.name} ${formatPlaytime(game.playtimeForever)} `)}\n              </div>\n              :\n              <>\n                {data.dlc.map(el => <div className='dlc'>\n                  <div className='dlcName'>{el.name}</div>\n                  <div>{el.price}</div>\n                </div>)}\n                <div>\n                  <input className=\"dlcInput\" placeholder=\"DLC name\" type=\"text\"\n                         onKeyUp={(event) => this.handleDlc(event, data.appId)} ref={this.dlcNameRef}/>\n                </div>\n\n                <div>\n                  <input className=\"dlcInput\" placeholder=\"DLC price\" type=\"text\"\n                         onKeyUp={(event) => this.handleDlc(event, data.appId)} ref={this.dlcPriceRef}/>\n                </div>\n              </>\n          }\n        </div>\n\n      </>\n    )\n  }\n}\n\nexport default Game\n","import React, {Component} from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport Game from \"./Game\"\nimport {countPriceHour, getTotalPrice} from \"./helpers\"\nimport * as _ from \"lodash\"\nimport {connect} from \"react-redux\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.formInputNameRef = React.createRef();\n    this.formInputPriceRef = React.createRef();\n\n    this.state = {\n      games: [],\n      serverStatus: \"\",\n      gamePriceStatus: \"\",\n      sortedBy: \"playtimeForever\",\n      sortOrder: \"desc\",\n      packs: [],\n    };\n  }\n\n  fetchGamesData = () => {\n    axios.get(`http://steamify-api.61hub.com/v1/games`)\n      .then(response => {\n        const mappedData = response.data.map((el) => {\n          if (isNaN(parseInt(el.price))) {\n            el.price = 0\n          } else {\n            el.price = parseInt(el.price)\n          }\n          const pricePerHour = countPriceHour(el);\n          el.pricePerHour = pricePerHour\n          return el\n        })\n        this.props.dispatchGamesToStore(mappedData);\n        this.fetchPacksData()\n\n      })\n  };\n\n  fetchPacksData = () => {\n    axios.get(`http://steamify-api.61hub.com/v1/packs`)\n      .then(response => {\n        response.data.forEach((pack) => {\n          pack.games = [];\n          pack.type = 'pack';\n          pack.items.forEach((id) => {\n            const foundGame = this.props.games.find((el) => {\n              return el.appId === parseInt(id)\n            });\n            pack.games.push(foundGame);\n          })\n\n          pack.playtimeForever = 0;\n          pack.games.forEach(g => pack.playtimeForever += g.playtimeForever);\n        });\n\n        this.props.dispatchPacksToStore(response.data);\n      })\n  };\n\n  componentDidMount() {\n    this.fetchGamesData();\n  }\n\n  saveData = (appid, value) => {\n    this.setState({serverStatus: \"loading\"});\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appid}`, {price: parseInt(value)})\n      .then(response => this.setState({serverStatus: \"success\"}))\n      .catch(response => this.setState({serverStatus: \"error\"}));\n    const clonedGames = [...this.props.games];\n    const elementToUpdatePrice = clonedGames.find((element) => element.appId == appid);\n    const indexElToUpdatePrice = clonedGames.findIndex((element) => element.appId == appid);\n    const updated = {...elementToUpdatePrice};\n    updated.price = parseInt(value);\n    clonedGames[indexElToUpdatePrice] = updated;\n    this.props.dispatchGamesToStore(clonedGames);\n  };\n\n  saveDataDlc = (appid, nameValue, priceValue) => {\n    const clonedGames = [...this.props.games];\n    const elementToUpdatePrice = clonedGames.find((element) => element.appId == appid);\n\n    this.setState({serverStatus: \"loading\"});\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appid}`, {\n      dlc: [...elementToUpdatePrice.dlc, {\n        name: nameValue,\n        price: priceValue\n      }]\n    })\n      .then(response => this.setState({serverStatus: \"success\"}))\n      .catch(response => this.setState({serverStatus: \"error\"}));\n\n\n    const indexElToUpdatePrice = clonedGames.findIndex((element) => element.appId == appid);\n    const updated = {...elementToUpdatePrice};\n    updated.dlc = [...updated.dlc, {name: nameValue, price: priceValue}];\n    clonedGames[indexElToUpdatePrice] = updated;\n    // console.log(clonedGames[indexElToUpdatePrice]);\n\n    this.props.dispatchGamesToStore(clonedGames);\n  };\n\n  handleSortClick = (type) => {\n    // console.log(type);\n    this.setState({sortedBy: type})\n  };\n\n  handleSortOrder = (type) => {\n    this.setState({sortOrder: type})\n  };\n\n  handleRefreshButton = () => {\n    this.fetchGamesData();\n  };\n\n  addPack = (e) => {\n    e.preventDefault();\n    const inputName = this.formInputNameRef.current.value;\n    const inputPrice = this.formInputPriceRef.current.value;\n    axios.post(`http://steamify-api.61hub.com/v1/packs`, {name: inputName, price: inputPrice})\n  };\n\n  render() {\n    let price = 0;\n    let playtimeForever = 0;\n    this.props.games.forEach((el) => {\n      price = price + getTotalPrice(el);\n      playtimeForever = playtimeForever + el.playtimeForever;\n\n    });\n    return (\n      <div className=\"container\">\n        <div className=\"overlay\">\n          <div className={`loadingState ${this.state.serverStatus}`}></div>\n          <div className=\"menu\">\n            Sort by:\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"price\")}/>Price</div>\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"playtimeForever\")}/>Hours</div>\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"pricePerHour\")}/>Price per hour\n            </div>\n            <div><input type=\"radio\" name=\"order\" onChange={() => this.handleSortOrder(\"asc\")}/>Asc</div>\n            <div><input type=\"radio\" name=\"order\" onChange={() => this.handleSortOrder(\"desc\")}/>Desc</div>\n            <div>{`Total price: ${price}P`}</div>\n            <div>{`Total playtime: ${Math.round(playtimeForever / 60)}hrs`}</div>\n            <div onClick={this.handleRefreshButton}>\n              <button>Refresh</button>\n            </div>\n          </div>\n          <div className=\"packageWrapper\">\n            <form onSubmit={this.addPack}>\n              <input type=\"text\" placeholder=\"Package name\" ref={this.formInputNameRef}/>\n              <input type=\"number\" placeholder=\"Package price\" ref={this.formInputPriceRef}/>\n              <button>Сохранить</button>\n            </form>\n          </div>\n\n          <div className=\"mainWrapper\">\n\n            {_.orderBy(this.props.games, [this.state.sortedBy, \"playtimeForever\"], [this.state.sortOrder])\n              .filter((el) => el.hidden != true)\n              .map((el, index) =>\n                <Game key={el.appId} data={el} index={index} saveData={this.saveData} saveDataDlc={this.saveDataDlc}\n                packages={this.props.games.filter((el) => el.items)} packId={this.state.packId}\n                />\n              )}\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    games: state.games\n  }),\n  (dispatch) => {\n    return {\n      dispatchGamesToStore (data) {\n        dispatch({\n          data: data,\n          type: \"gamesToStore\"\n        })\n      },\n      dispatchPacksToStore (packs) {\n        dispatch({\n          packs: packs,\n          type: \"packsToStore\"\n        })\n      },\n      dispatchNewItems (items, packId) {\n        dispatch({\n          packId: packId,\n          item: items,\n          type: \"newItem\"\n        })\n      }\n    }\n  }\n)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore} from \"redux\"\n\n\n\nfunction gamesReducer(state, action) {\n  switch (action.type) {\n    case 'gamesToStore':\n      return {\n        games: [...state.games, ...action.data]\n      }\n    case 'packsToStore':\n      return {\n        games: [...state.games, ...action.packs]\n      }\n    case 'newItem':\n      const packId = action.packId\n      const item = action.item\n      const foundPack = {...state.games.find((game) => game.packId == packId)}\n      foundPack.items = [...foundPack.items, item]\n\n  }\n return {\n   games: []\n }\n}\nconst store = createStore(\n  gamesReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\"\nimport store from  \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
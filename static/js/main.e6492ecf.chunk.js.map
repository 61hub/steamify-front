{"version":3,"sources":["helpers.js","Game.js","store.js","Stats.js","App.js","serviceWorker.js","index.js"],"names":["countPriceHour","game","dlcPrice","items","dlc","length","forEach","dlcEl","price","type","itemsTotalTime","console","log","games","g","playtimeForever","Math","round","playTimeInHours","formatPlaytime","minutes","hrs","floor","mins","toString","concat","getTotalPrice","total","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputSubmit","event","appid","keyCode","saveData","state","value","setState","target","handleDlc","saveDataDlc","dlcNameRef","current","dlcPriceRef","definePriceHourClassName","el","priceHour","hideGame","appId","gameClassName","hidden","axios","patch","openDlc","e","dlcClassName","patchSubmitedData","preventDefault","packId","selectRef","options","selectedIndex","foundPack","packages","find","toConsumableArray","then","onAddedToPack","React","createRef","data","_this2","react_default","a","createElement","Fragment","className","src","logo","onClick","name","index","totalPrice","defaultValue","onKeyUp","onSubmit","ref","map","pack","placeholder","Component","actionTypes","fetchPacks","dispatch","get","response","packs","fetchGames","store","createStore","action","isNaN","parseInt","pricePerHour","objectSpread","id","foundGame","push","random","item","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Stats","_ref","filter","playtimeTwoWeeks","sort","g1","g2","_g","i","src_Game","App","fetchData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","serverStatus","catch","gameUpdate","nameValue","priceValue","clonedGames","elementToUpdatePrice","element","indexElToUpdatePrice","findIndex","updated","dispatchGamesToStore","handleRefreshButton","fetchGamesData","addPack","inputName","formInputNameRef","inputPrice","formInputPriceRef","post","sortedBy","sortOrder","isSettingsOpen","isStatsOpen","_this$props","buttons","icon","drawer","isOpen","onClose","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","hasBackdrop","position","Position","RIGHT","usePortal","size","Drawer","SIZE_SMALL","Classes","DRAWER_BODY","DIALOG_BODY","radioGroup","label","onChange","currentTarget","selectedValue","controls","SIZE_LARGE","Stats_Stats","_","key","connect","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6492ecf.chunk.js","sourcesContent":["const countPriceHour = (game) => {\n  let dlcPrice = 0;\n\n  if(!game.items && game.dlc.length > 0) {\n    game.dlc.forEach((dlcEl) => {\n      dlcPrice = dlcPrice + dlcEl.price;\n    })\n  }\n\n  if (game.type === 'pack') {\n    let itemsTotalTime = 0;\n\n    console.log(game.games)\n    game.games.forEach(g => itemsTotalTime = itemsTotalTime + g.playtimeForever);\n    if (itemsTotalTime <= 60) {\n      return game.price;\n    } else {\n      console.log(game.price, itemsTotalTime / 60)\n      return Math.round((game.price / itemsTotalTime / 60));\n    }\n  }\n\n  let priceHour;\n  if (game.playtimeForever <= 60) {\n    priceHour = game.price + dlcPrice;\n    return priceHour\n  } else {\n    let playTimeInHours = game.playtimeForever / 60;\n    priceHour = (game.price  + dlcPrice) / playTimeInHours;\n    return priceHour\n  }\n};\n\nconst formatPlaytime = (minutes) => {\n  const hrs = Math.floor(minutes / 60);\n  let mins = minutes % 60;\n  if (mins > 10) {\n    mins.toString().length < 2 ? mins = mins * 10 : void(0);\n  }\n\n  if (!hrs) {\n    return `${mins}m`;\n  }\n\n  if (!mins) {\n    return `${hrs}h`;\n  }\n\n  return `${hrs}h ${mins}m`;\n};\n\nconst getTotalPrice = (game) => {\n  let total = game.price\n  if (game.dlc && game.dlc.length) {\n    game.dlc.forEach(dlc => total = total + dlc.price)\n  }\n\n  return total;\n};\n\nexport { countPriceHour, formatPlaytime, getTotalPrice }\n","import React, {Component} from \"react\"\nimport {countPriceHour, formatPlaytime, getTotalPrice} from \"./helpers\"\nimport axios from 'axios'\n\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.dlcNameRef = React.createRef();\n    this.dlcPriceRef = React.createRef();\n    this.selectRef = React.createRef();\n    this.state = {\n      value: \"\",\n      hidden: props.data.hidden,\n      dlcClassName: \"dlcWrapperHidden\"\n    }\n  }\n\n  handleInputSubmit = (event, appid) => {\n    if (event.keyCode === 13) {\n      this.props.saveData(appid, this.state.value);\n    } else {\n      this.setState({value: event.target.value});\n    }\n  };\n\n  handleDlc = (event, appid) => {\n    if (event.keyCode === 13) {\n      this.props.saveDataDlc(appid, this.dlcNameRef.current.value, this.dlcPriceRef.current.value)\n    }\n  };\n\n  definePriceHourClassName = (el) => {\n    let priceHour = countPriceHour(el);\n    // console.log(priceHour);\n    if (priceHour <= 10) {\n      return \"darkGreen\"\n    } else if (priceHour <= 50) {\n      return \"green\"\n    } else if (priceHour <= 100) {\n      return \"yellow\"\n    } else if (priceHour <= 200) {\n      return \"orange\"\n    } else if (priceHour >= 200) {\n      return \"red\"\n    }\n  };\n\n  hideGame = (appId) => {\n    // console.log(appId);\n    this.setState({gameClassName: \"hide\", hidden: true}, () => {\n      axios.patch(`http://steamify-api.61hub.com/v1/games/${appId}`, {hidden: this.state.hidden});\n    });\n\n  };\n\n  openDlc = (e) => {\n    if (this.state.dlcClassName == \"dlcWrapper\") {\n      this.setState({dlcClassName: \"dlcWrapperHidden\"})\n    } else {\n      this.setState({dlcClassName: \"dlcWrapper\"})\n    }\n  };\n\n  patchSubmitedData = (appId, e) => {\n    e.preventDefault();\n    const stringAppid = appId.toString();\n    const packId = this.selectRef.current.options[this.selectRef.current.selectedIndex].value;\n    const foundPack = this.props.packages.find((el) => el.packId == packId);\n\n    axios.patch(`http://steamify-api.61hub.com/v1/packs/${packId}`, {items: [...foundPack.items, appId]})\n      .then(() => {\n        this.props.onAddedToPack();\n        this.hideGame(appId);\n      })\n  };\n\n\n  render() {\n    const {data} = this.props;\n\n    return (\n      <>\n        <div className={`gameWrapper ${this.state.hidden ? \"hidden\" : \"\"}`}>\n          <div className=\"gameIcon\">\n            <img src={data.logo}/>\n          </div>\n\n          <div className='gameInformation'>\n            <div className=\"gameName\" onClick={e => this.openDlc(e)}>{data.name}</div>\n            <div className=\"gameMinorInfo\">\n              <div className={`gameHourPrice ${this.definePriceHourClassName(data)}`}></div>\n              <div className='gameIndex'>#{this.props.index + 1}</div>\n              <div className='gameTotalPrice'>{data.totalPrice}P</div>\n            </div>\n          </div>\n\n\n          <div className=\"gameDuration\">{formatPlaytime(data.playtimeForever)}</div>\n        </div>\n\n\n        <div className={`${this.state.dlcClassName} options`}>\n          <div>\n            <input className=\"priceInput\" defaultValue={data.price} type=\"number\"\n                   onKeyUp={(event) => this.handleInputSubmit(event, data.appId, data.playtimeForever)}/>\n          </div>\n          <div className=\"hideButton\">\n            <button onClick={() => this.hideGame(data.appId)}>Hide</button>\n          </div>\n          <div className=\"dropDownPacks\">\n            {data.type !== 'pack' &&\n              <form onSubmit={e => this.patchSubmitedData(data.appId, e)}>\n                <select ref={this.selectRef}>\n                  {this.props.packages && this.props.packages.map(pack => <option value={pack.packId}>{pack.name}</option>)}\n                </select>\n                <button>Package</button>\n              </form>\n            }\n          </div>\n        </div>\n\n        <div className={this.state.dlcClassName}>\n          {\n            data.type === 'pack' ?\n              <div className='packWrapper'>\n                {data.games.map((game) => <div>\n                  <div>{game.name}</div>\n                  <div>{formatPlaytime(game.playtimeForever)}</div>\n                </div>)}\n              </div>\n              :\n              <>\n                {data.dlc && data.dlc.map(el => <div className='dlc'>\n                  <div className='dlcName'>{el.name}</div>\n                  <div>{el.price}</div>\n                </div>)}\n                <div>\n                  <input className=\"dlcInput\" placeholder=\"DLC name\" type=\"text\"\n                         onKeyUp={(event) => this.handleDlc(event, data.appId)} ref={this.dlcNameRef}/>\n                </div>\n\n                <div>\n                  <input className=\"dlcInput\" placeholder=\"DLC price\" type=\"text\"\n                         onKeyUp={(event) => this.handleDlc(event, data.appId)} ref={this.dlcPriceRef}/>\n                </div>\n              </>\n          }\n        </div>\n\n      </>\n    )\n  }\n}\n\nexport default Game\n","import {createStore, compose, applyMiddleware} from \"redux\"\nimport thunk from \"redux-thunk\";\nimport axios from \"axios\";\nimport {countPriceHour, getTotalPrice} from \"./helpers\";\n\nconst actionTypes = {\n  packsFetched: 'packsFetched',\n  gamesFetched: 'gamesFetched',\n  fetchGames: 'fetchGamesRequest'\n};\n\nexport const fetchGamesAction = () => ({\n  type: actionTypes.fetchGames\n});\n\nexport const packsFetched = (packs) => ({\n  type: actionTypes.packsFetched,\n  packs\n});\n\nexport const gamesFetched = (games) => ({\n  type: actionTypes.gamesFetched,\n  games\n});\n\n\nexport const fetchPacks = () => (\n  (dispatch) => (\n    axios\n      .get(`http://steamify-api.61hub.com/v1/packs`)\n      .then(response => dispatch(packsFetched(response.data)))\n  )\n);\n\nexport const fetchGames = () => (\n  (dispatch) => (\n    axios\n      .get(`http://steamify-api.61hub.com/v1/games`)\n      .then(response => dispatch(gamesFetched(response.data)))\n  )\n);\n\nconst gamesReducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.gamesFetched:\n      action.games.forEach(game => {\n        if (isNaN(parseInt(game.price))) {\n          game.price = 0\n        } else {\n          game.price = parseInt(game.price)\n        }\n        game.pricePerHour = countPriceHour(game);\n        game.totalPrice = getTotalPrice(game);\n      });\n\n      return {\n        ...state,\n        games: action.games\n      };\n\n    case actionTypes.packsFetched:\n      const {packs} = action\n\n      packs.forEach(pack => {\n        pack.games = [];\n        pack.type = 'pack';\n        pack.items.forEach(id => {\n          const foundGame = state.games.find(el => el.appId === parseInt(id));\n          if (foundGame) {\n            pack.games.push(foundGame);\n          }\n        });\n\n        pack.playtimeForever = 0;\n        if (pack.games && pack.games.length) {\n          pack.games.forEach(g => pack.playtimeForever += g.playtimeForever);\n          pack.logo = pack.games[Math.floor(Math.random() * (pack.games.length - 1))].logo;\n          pack.pricePerHour = countPriceHour(pack);\n        }\n        pack.totalPrice = pack.price\n      });\n\n      return {\n        ...state,\n        packs\n      };\n\n    case 'dataFetched':\n      return {\n        ...state,\n        games: action.data\n      };\n\n    case 'gamesToStore':\n      return {\n        ...state,\n        games: [...state.games, ...action.data]\n      };\n\n    case 'gameUpdate':\n      const game = state.games.map(item => {\n        if (item.appId === action.game.appId) {\n          return {...item, ...action.game}\n        }\n        return item;\n      });\n\n      return {\n        ...state,\n        games: game\n      };\n\n    case 'packsToStore':\n      return {\n        ...state,\n        games: [...state.games, ...action.packs]\n      };\n  }\n  return {\n    games: [],\n    packs: []\n  }\n};\n\nconst store = createStore(\n  gamesReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store\n","import React from 'react'\nimport {formatPlaytime, getTotalPrice} from \"./helpers\";\nimport Game from \"./Game\";\n\nexport const Stats = ({ games, packs }) => {\n  let price = 0;\n  let playtimeForever = 0;\n\n  games.forEach(game => {\n    if (!game.hidden) {\n      price = price + getTotalPrice(game);\n      playtimeForever = playtimeForever + game.playtimeForever;\n    }\n  });\n\n  packs.forEach(pack => {\n    price = price + pack.price;\n    playtimeForever = playtimeForever + pack.playtimeForever;\n  });\n\n  return (\n    <>\n      <div className=\"stats\">\n        <div>{`Total price: ${price}P`}</div>\n        <div>{`Total playtime: ${Math.round(playtimeForever / 60)}hrs`}</div>\n      </div>\n      <div className=\"twoWeeks\">\n        <h3>Two weeks leaders:</h3>\n        {\n          games\n            .filter(g => g.playtimeTwoWeeks)\n            .sort((g1, g2) => g2.playtimeTwoWeeks - g1.playtimeTwoWeeks)\n            .map(g => {\n              const _g = {...g};\n              _g.playtimeForever = _g.playtimeTwoWeeks\n              return _g\n            })\n            .map((g, i) => <Game data={g} index={i}>{g.name} {formatPlaytime(g.playtimeTwoWeeks)}</Game>)\n        }\n      </div>\n\n    </>\n  )\n};\n","import React, {Component} from 'react';\nimport axios from 'axios'\nimport Game from \"./Game\"\nimport {countPriceHour, getTotalPrice} from \"./helpers\"\nimport * as _ from \"lodash\"\nimport {connect} from \"react-redux\"\nimport {fetchGames, fetchGamesAction, fetchPacks} from \"./store\";\nimport {Drawer, Position, Classes, Button, RadioGroup, Radio} from '@blueprintjs/core';\nimport \"../node_modules/normalize.css/normalize.css\";\nimport \"../node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"../node_modules/@blueprintjs/core/lib/css/blueprint.css\";\nimport './App.css';\nimport {Stats} from \"./Stats\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.formInputNameRef = React.createRef();\n    this.formInputPriceRef = React.createRef();\n\n    this.state = {\n      serverStatus: \"\",\n      sortedBy: \"playtimeForever\",\n      sortOrder: \"desc\",\n      isSettingsOpen: false,\n      isStatsOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    await this.props.fetchGames();\n    await this.props.fetchPacks();\n  };\n\n  saveData = (appId, price) => {\n    this.setState({serverStatus: \"loading\"});\n    price = parseInt(price);\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appId}`, {price})\n      .then(response => this.setState({serverStatus: \"success\"}))\n      .catch(response => this.setState({serverStatus: \"error\"}));\n\n    this.props.gameUpdate({appId, price});\n  };\n\n  saveDataDlc = (appid, nameValue, priceValue) => {\n    const clonedGames = [...this.props.games];\n    const elementToUpdatePrice = clonedGames.find((element) => element.appId == appid);\n\n    this.setState({serverStatus: \"loading\"});\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appid}`, {\n      dlc: [...elementToUpdatePrice.dlc, {\n        name: nameValue,\n        price: priceValue\n      }]\n    })\n      .then(response => this.setState({serverStatus: \"success\"}))\n      .catch(response => this.setState({serverStatus: \"error\"}));\n\n\n    const indexElToUpdatePrice = clonedGames.findIndex((element) => element.appId == appid);\n    const updated = {...elementToUpdatePrice};\n    updated.dlc = [...updated.dlc, {name: nameValue, price: priceValue}];\n    clonedGames[indexElToUpdatePrice] = updated;\n\n    this.props.dispatchGamesToStore(clonedGames);\n  };\n\n  handleRefreshButton = () => {\n    this.fetchGamesData();\n  };\n\n  addPack = (e) => {\n    e.preventDefault();\n    const inputName = this.formInputNameRef.current.value;\n    const inputPrice = this.formInputPriceRef.current.value;\n    axios.post(`http://steamify-api.61hub.com/v1/packs`, {name: inputName, price: inputPrice})\n  };\n\n  render() {\n    const {games, packs} = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"controls\">\n          <Button className=\"bp3-minimal\" onClick={() => this.setState({isSettingsOpen: true})}\n                  icon=\"settings\"/>\n          <Button className=\"bp3-minimal\" onClick={() => this.setState({isStatsOpen: true})}\n                  icon=\"grouped-bar-chart\"/>\n          <Button className='bp3-minimal' onClick={this.fetchData} icon=\"refresh\"/>\n        </div>\n\n        <Drawer\n          isOpen={this.state.isSettingsOpen}\n          onClose={() => this.setState({isSettingsOpen: false})}\n          autoFocus={true}\n          canEscapeKeyClose={true}\n          canOutsideClickClose={true}\n          enforceFocus={true}\n          hasBackdrop={true}\n          position={Position.RIGHT}\n          usePortal={true}\n          size={Drawer.SIZE_SMALL}\n        >\n          <div className={Classes.DRAWER_BODY}>\n            <div className={Classes.DIALOG_BODY}>\n              <div className={`loadingState ${this.state.serverStatus}`}/>\n\n              <RadioGroup\n                label=\"Sort by:\"\n                onChange={e => this.setState({sortedBy: e.currentTarget.value})}\n                selectedValue={this.state.sortedBy}\n              >\n                <Radio label=\"Price\" value=\"totalPrice\"/>\n                <Radio label=\"Hours\" value=\"playtimeForever\"/>\n                <Radio label=\"Price per hour\" value=\"pricePerHour\"/>\n              </RadioGroup>\n\n              <RadioGroup\n                label=\"Order:\"\n                onChange={e => this.setState({sortOrder: e.currentTarget.value})}\n                selectedValue={this.state.sortOrder}\n              >\n                <Radio label=\"Asc\" value=\"asc\"/>\n                <Radio label=\"Desc\" value=\"desc\"/>\n              </RadioGroup>\n              <form onSubmit={this.addPack}>\n                <input type=\"text\" placeholder=\"Package name\" ref={this.formInputNameRef}/>\n                <input type=\"number\" placeholder=\"Package price\" ref={this.formInputPriceRef}/>\n                <button>Сохранить</button>\n              </form>\n\n            </div>\n          </div>\n        </Drawer>\n\n        <Drawer\n          isOpen={this.state.isStatsOpen}\n          onClose={() => this.setState({isStatsOpen: false})}\n          autoFocus={true}\n          canEscapeKeyClose={true}\n          canOutsideClickClose={true}\n          enforceFocus={true}\n          hasBackdrop={true}\n          position={Position.RIGHT}\n          usePortal={true}\n          size={Drawer.SIZE_LARGE}\n        >\n          <div className={Classes.DRAWER_BODY}>\n            <div className={Classes.DIALOG_BODY}>\n              <Stats games={[...this.props.games]} packs={[...this.props.packs]} />\n            </div>\n          </div>\n        </Drawer>\n\n        <div className=\"mainWrapper\">\n\n          {_.orderBy([...packs, ...games], [this.state.sortedBy, \"playtimeForever\"], [this.state.sortOrder])\n            .filter(el => !el.hidden)\n            .map((el, index) =>\n              <Game\n                key={el.appId}\n                data={el}\n                index={index}\n                saveData={this.saveData}\n                saveDataDlc={this.saveDataDlc}\n                packages={this.props.games.filter((el) => el.items)}\n                packId={this.state.packId}\n                onAddedToPack={this.fetchGamesData}\n              />\n            )}\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    games: state.games,\n    packs: state.packs\n  }),\n  (dispatch) => {\n    return {\n      fetchGames() {\n        return dispatch(fetchGames())\n      },\n\n      fetchPacks() {\n        return dispatch(fetchPacks())\n      },\n\n      gameUpdate(game) {\n        dispatch({\n          type: 'gameUpdate',\n          game\n        })\n      },\n\n      dispatchGamesToStore(data) {\n        dispatch({\n          data: data,\n          type: \"gamesToStore\"\n        })\n      }\n    }\n  }\n)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\"\nimport store from  \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["helpers.js","Game.js","App.js","serviceWorker.js","store.js","index.js"],"names":["countPriceHour","el","dlc","length","map","dlcEl","console","log","playtimeForever","price","playTimeInHours","Math","round","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputSubmit","event","appid","keyCode","saveData","state","value","setState","target","handleDlc","saveDataDlc","dlcNameRef","current","dlcPriceRef","definePriceHourClassName","priceHour","hideGame","appId","gameClassName","hidden","axios","patch","concat","openDlc","e","dlcClassName","React","createRef","data","_this2","react_default","a","createElement","className","index","src","icon","onClick","name","placeholder","type","onKeyUp","ref","colSpan","playtimeForeverReadable","replace","defaultValue","Component","App","serverStatus","parseInt","then","response","catch","clonedGames","toConsumableArray","games","elementToUpdatePrice","find","element","indexElToUpdatePrice","findIndex","updated","objectSpread","dispatchGamesToStore","nameValue","priceValue","handleSortClick","sortedBy","handleSortOrder","sortOrder","gamePriceStatus","get","mappedData","isNaN","pricePerHour","filter","_this3","forEach","onChange","_","src_Game","key","connect","dispatch","Boolean","window","location","hostname","match","store","createStore","action","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e4d22c6.chunk.js","sourcesContent":["export const countPriceHour = (el) => {\n  if(el.dlc.length > 0) {\n    let dlcPrice;\n    el.dlc.map((dlcEl) => {\n      // dlcPrice = dlcEl.price + el.price;\n      console.log(dlcEl);\n    })\n  }\n\n  let priceHour;\n  if (el.playtimeForever <= 60) {\n    priceHour = el.price;\n    return priceHour\n  } else {\n    let playTimeInHours = el.playtimeForever / 60;\n    priceHour = Math.round(el.price / playTimeInHours);\n    return priceHour\n  }\n};\n\n","import React, {Component} from \"react\"\nimport {countPriceHour} from \"./helpers\"\nimport axios from 'axios'\n\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.dlcNameRef = React.createRef();\n    this.dlcPriceRef = React.createRef();\n    this.state = {\n      value: \"\",\n      hidden: props.data.hidden,\n      dlcClassName: \"dlcWrapperHidden\"\n\n    }\n  }\n\n  handleInputSubmit = (event, appid) => {\n    if (event.keyCode == 13) {\n      this.props.saveData(appid, this.state.value);\n    }\n    else {\n      this.setState({value: event.target.value});\n    }\n  };\n  handleDlc = (event, appid) => {\n    if (event.keyCode == 13) {\n      this.props.saveDataDlc(appid, this.dlcNameRef.current.value, this.dlcPriceRef.current.value)\n      console.log(this.dlcNameRef.current.value)\n    }\n  }\n\n  definePriceHourClassName = (el) => {\n    let priceHour = countPriceHour(el);\n    if (priceHour <= 10) {\n      return \"darkGreen\"\n    } else if (priceHour <= 50) {\n      return \"green\"\n    } else if (priceHour <= 100) {\n      return \"yellow\"\n    } else if (priceHour <= 200) {\n      return \"orange\"\n    } else if (priceHour >= 200) {\n      return \"red\"\n    }\n  };\n\n  hideGame = (appId) => {\n    console.log(appId);\n    this.setState({gameClassName: \"hide\", hidden: true}, () => {\n      axios.patch(`http://steamify-api.61hub.com/v1/games/${appId}`, {hidden: this.state.hidden});\n    });\n\n  };\n  openDlc = (e) => {\n    if(this.state.dlcClassName == \"dlcWrapper\") {\n      this.setState({dlcClassName: \"dlcWrapperHidden\"})\n    } else {\n      this.setState({dlcClassName: \"dlcWrapper\"})\n\n    }\n  }\n\n  render() {\n    return (\n      <div className={`gameWrapper ${this.state.hidden ? \"hidden\" : \"\"}`}>\n        <div className=\"gameHourPriceWrapper\">\n          <div className={`gameHourPrice ${this.definePriceHourClassName(this.props.data)}`}></div>\n        </div>\n        <div>{this.props.index + 1}</div>\n        <div className=\"gameIcon\">\n          <img src={this.props.data.icon}></img>\n        </div>\n        <div className=\"gameName\" onClick={(e) => this.openDlc(e)}>{this.props.data.name}</div>\n        <div className={this.state.dlcClassName}>\n        {\n          this.props.data.dlc.length > 0 ?\n            <div>\n              {this.props.data.dlc.map((el) => <div>\n                <div>{el.name}</div>\n                <div>{el.price}</div>\n              </div>)}\n              <div><input className=\"dlcInput\" placeholder=\"DLC name\" type=\"text\"\n                          onKeyUp={(event) => this.handleDlc(event, this.props.data.appId)} ref={this.dlcNameRef}/>\n              </div>\n\n              <div>\n                <input className=\"dlcInput\" placeholder=\"DLC price\" type=\"text\"\n                       onKeyUp={(event) => this.handleDlc(event, this.props.data.appId)} ref={this.dlcPriceRef}/>\n              </div>\n            </div>\n            :\n            <div>\n              <div><input className=\"dlcInput\" placeholder=\"DLC name\" type=\"text\"\n                          onKeyUp={(event) => this.handleDlc(event, this.props.data.appId)} ref={this.dlcNameRef}/>\n              </div>\n\n              <div>\n                <input className=\"dlcInput\" placeholder=\"DLC price\" type=\"text\"\n                       onKeyUp={(event) => this.handleDlc(event, this.props.data.appId)} ref={this.dlcPriceRef}/>\n              </div>\n            </div>\n        }\n        </div>\n\n        <div colSpan=\"2\"\n             className=\"gameDuration\">{this.props.data.playtimeForeverReadable.replace(\" days\", \"d\").replace(\" hours\", \"h\").replace(\" minutes\", \"m\")}</div>\n        <div>\n          <input className=\"priceInput\" defaultValue={this.props.data.price} type=\"number\"\n                 onKeyUp={(event) => this.handleInputSubmit(event, this.props.data.appId, this.props.data.playtimeForever)}/>\n        </div>\n        <div>\n          <button onClick={() => this.hideGame(this.props.data.appId)}>Hide</button>\n        </div>\n\n      </div>\n    )\n  }\n}\nexport default Game","import React, {Component} from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport Game from \"./Game\"\nimport {countPriceHour} from \"./helpers\"\nimport * as _ from \"lodash\"\nimport {connect} from \"react-redux\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      games: [],\n      serverStatus: \"\",\n      gamePriceStatus: \"\",\n      sortedBy: \"pricePerHour\",\n      sortOrder: \"desc\",\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://steamify-api.61hub.com/v1/games`)\n      .then(response => {\n        const mappedData = response.data.map((el) => {\n          if (isNaN(parseInt(el.price))) {\n            el.price = 0\n          } else {\n            el.price = parseInt(el.price)\n          }\n          const pricePerHour = countPriceHour(el);\n          el.pricePerHour = pricePerHour\n          return el\n        }).filter((el) => el.hidden == false )\n        this.props.dispatchGamesToStore(mappedData);\n\n      })\n  }\n\n  saveData = (appid, value) => {\n    this.setState({serverStatus: \"loading\"});\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appid}`, {price: parseInt(value)})\n      .then(response => this.setState({serverStatus: \"success\"}))\n      .catch(response => this.setState({serverStatus: \"error\"}));\n    const clonedGames = [...this.props.games];\n    const elementToUpdatePrice = clonedGames.find((element) => element.appId == appid);\n    const indexElToUpdatePrice = clonedGames.findIndex((element) => element.appId == appid);\n    const updated = {...elementToUpdatePrice};\n    updated.price = parseInt(value);\n    clonedGames[indexElToUpdatePrice] = updated;\n    this.props.dispatchGamesToStore(clonedGames);\n  };\n  saveDataDlc = (appid, nameValue, priceValue) => {\n    const clonedGames = [...this.props.games];\n    const elementToUpdatePrice = clonedGames.find((element) => element.appId == appid);\n\n    this.setState({serverStatus: \"loading\"});\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appid}`, {dlc: [...elementToUpdatePrice.dlc, {name:nameValue, price:priceValue}]})\n      .then(response => this.setState({serverStatus: \"success\"}))\n      .catch(response => this.setState({serverStatus: \"error\"}));\n\n\n    const indexElToUpdatePrice = clonedGames.findIndex((element) => element.appId == appid);\n    const updated = {...elementToUpdatePrice};\n    updated.dlc = [...updated.dlc, {name: nameValue, price: priceValue}];\n    clonedGames[indexElToUpdatePrice] = updated;\n    console.log(clonedGames[indexElToUpdatePrice]);\n\n    this.props.dispatchGamesToStore(clonedGames);\n  };\n  handleSortClick = (type) => {\n    console.log(type);\n    this.setState({sortedBy: type})\n  };\n  handleSortOrder = (type) => {\n    this.setState({sortOrder: type})\n  };\n  render() {\n\n    let price = 0;\n    let playtimeForever = 0;\n     this.props.games.forEach((el) => {\n      price = price + el.price;\n      playtimeForever = playtimeForever + el.playtimeForever;\n\n    });\n    return (\n      <div className=\"container\">\n        <div className=\"overlay\">\n          <div className={`loadingState ${this.state.serverStatus}`}></div>\n          <div>\n            Sort by:\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"price\")}/>Price</div>\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"playtimeForever\")}/>Hours</div>\n            <div><input type=\"radio\" name=\"sort\" onChange={() => this.handleSortClick(\"pricePerHour\")}/>Price per hour</div>\n            <div><input type=\"radio\" name=\"order\" onChange={() => this.handleSortOrder(\"asc\")}/>Asc</div>\n            <div><input type=\"radio\" name=\"order\" onChange={() => this.handleSortOrder(\"desc\")}/>Desc</div>\n          </div>\n          <div>{`Total price: ${price}`}</div>\n          <div>{`Total playtime: ${Math.round(playtimeForever / 60 / 24)}`}</div>\n          <div className=\"mainWrapper\">\n\n          <div>\n              <div>Game's name</div>\n              <div>Game play duration</div>\n              <div>Price</div>\n            </div>\n\n\n            {_.orderBy(this.props.games, [this.state.sortedBy, \"playtimeForever\"], [this.state.sortOrder])\n              .map((el, index) =>\n                <Game key={el.appId} data={el} index={index} saveData={this.saveData} saveDataDlc={this.saveDataDlc}/>\n              )}\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    games: state.games\n  }),\n  (dispatch) => {\n    return {\n    dispatchGamesToStore (data) {\n      dispatch({\n        data: data,\n        type: \"gamesToStore\"\n      })\n    }\n    }\n  }\n)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore} from \"redux\"\n\n\n\nfunction gamesReducer(state, action) {\n  switch (action.type) {\n    case 'gamesToStore':\n      return {\n        games: [...action.data]\n      }\n  }\n return {\n   games: []\n }\n}\nconst store = createStore(gamesReducer);\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\"\nimport store from  \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["helpers.js","components/Game/Game.js","components/Stats.js","components/Settings.js","redux/actions/games.js","redux/actions/packs.js","redux/selectors/index.js","App.js","redux/reducers/index.js","redux/reducers/games.js","redux/reducers/packs.js","redux/store.js","index.js","components/Game/Game.module.scss"],"names":["countPriceHour","game","dlcPrice","items","dlc","length","forEach","dlcEl","price","type","itemsTotalTime","games","g","playtimeForever","Math","round","playTimeInHours","formatPlaytime","minutes","hrs","floor","mins","toString","concat","getTotalPrice","total","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","definePriceHourClassName","el","priceHour","hide","appId","data","onChange","hidden","toggleOptions","setState","isExpanded","state","patchSubmitedData","e","preventDefault","packId","selectRef","current","options","selectedIndex","value","foundPack","packages","find","axios","patch","toConsumableArray","then","onAddedToPack","onChangeCompleted","isCompleted","completed","renderOptions","react_default","a","createElement","className","styles","react_final_form_es","onSubmit","_this$props","_len","arguments","Array","_key","onPriceChange","apply","render","_ref","handleSubmit","name","initialValue","component","placeholder","format","parseInt","onClick","controls","checked","label","ref","map","pack","React","createRef","_this2","isPack","classNames","defineProperty","gameWrapper","gameIcon","src","logo","alt","index","totalPrice","gameDuration","details","expanded","_","Fragment","item","addDlcWrapper","_this2$props","_len2","_key2","onAddDlcFormSubmit","_ref2","reset","Component","Stats","packs","filter","playtimeTwoWeeks","sort","g1","g2","_g","objectSpread","i","components_Game_Game","Settings","isOpen","onClose","serverStatus","onSortChange","sortedBy","sortOrder","onSortOrderChange","addPack","drawer","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","hasBackdrop","position","Position","RIGHT","usePortal","size","Drawer","SIZE_SMALL","Classes","DRAWER_BODY","DIALOG_BODY","radioGroup","selectedValue","gamesActionsTypes","packsActionsTypes","getGames","getComposedPacks","createSelector","packData","id","foundGame","push","random","pricePerHour","getComposedGames","gameData","isNaN","App","isSettingsOpen","isStatsOpen","fetchData","_callee","regenerator_default","wrap","_context","prev","next","fetchGames","fetchPacks","stop","updateItem","updates","response","gameUpdate","catch","addDlc","appid","dlcName","gameToUpdate","element","_ref3","packName","packPrice","post","buttons","icon","components_Settings","currentTarget","SIZE_LARGE","Stats_Stats","key","defaultProps","connect","dispatch","get","combineReducers","undefined","action","middlewares","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","store","createStore","reducers","ReactDOM","es","src_App_0","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0b7ff749.chunk.js","sourcesContent":["const countPriceHour = (game) => {\n  let dlcPrice = 0;\n\n  if(!game.items && game.dlc.length > 0) {\n    game.dlc.forEach((dlcEl) => {\n      dlcPrice = dlcPrice + dlcEl.price;\n    })\n  }\n\n  if (game.type === 'pack') {\n    let itemsTotalTime = 0;\n\n    game.games.forEach(g => itemsTotalTime = itemsTotalTime + g.playtimeForever);\n    if (itemsTotalTime <= 60) {\n      return game.price;\n    } else {\n      return Math.round((game.price / itemsTotalTime / 60));\n    }\n  }\n\n  let priceHour;\n  if (game.playtimeForever <= 60) {\n    priceHour = game.price + dlcPrice;\n    return priceHour\n  } else {\n    let playTimeInHours = game.playtimeForever / 60;\n    priceHour = (game.price  + dlcPrice) / playTimeInHours;\n    return priceHour\n  }\n};\n\nconst formatPlaytime = (minutes) => {\n  const hrs = Math.floor(minutes / 60);\n  let mins = minutes % 60;\n  if (mins > 10) {\n    mins.toString().length < 2 ? mins = mins * 10 : void(0);\n  }\n\n  if (!hrs) {\n    return `${mins}m`;\n  }\n\n  if (!mins) {\n    return `${hrs}h`;\n  }\n\n  return `${hrs}h ${mins}m`;\n};\n\nconst getTotalPrice = (game) => {\n  let total = game.price\n  if (game.dlc && game.dlc.length) {\n    game.dlc.forEach(dlc => total = total + dlc.price)\n  }\n\n  return total;\n};\n\nexport { countPriceHour, formatPlaytime, getTotalPrice }\n","import React, {Component} from \"react\"\nimport {countPriceHour, formatPlaytime, getTotalPrice} from \"../../helpers\"\nimport axios from 'axios'\nimport styles from './Game.module.scss'\nimport classNames from 'classnames'\nimport * as _ from 'lodash'\nimport { Field, Form } from \"react-final-form\";\nimport { Switch } from \"@blueprintjs/core\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.selectRef = React.createRef();\n    this.state = {\n      isExpanded: false,\n      isCompleted: props.data.completed,\n    }\n  }\n\n  definePriceHourClassName = (el) => {\n    let priceHour = countPriceHour(el);\n    if (priceHour <= 10) {\n      return \"darkGreen\"\n    } else if (priceHour <= 50) {\n      return \"green\"\n    } else if (priceHour <= 100) {\n      return \"yellow\"\n    } else if (priceHour <= 200) {\n      return \"orange\"\n    } else if (priceHour >= 200) {\n      return \"red\"\n    }\n  };\n\n  hide = () => {\n    const appId = this.props.data.appId\n    this.props.onChange(appId, {hidden: true})\n  };\n\n  toggleOptions = () => {\n    this.setState({isExpanded: !this.state.isExpanded})\n  };\n\n  patchSubmitedData = (appId, e) => {\n    e.preventDefault();\n    const stringAppid = appId.toString();\n    const packId = this.selectRef.current.options[this.selectRef.current.selectedIndex].value;\n    const foundPack = this.props.packages.find((el) => el.packId === packId);\n\n    axios.patch(`http://steamify-api.61hub.com/v1/packs/${packId}`, {items: [...foundPack.items, appId]})\n      .then(() => {\n        this.props.onAddedToPack();\n        this.hide();\n      })\n  };\n\n  onChangeCompleted = (e) => {\n    this.setState({isCompleted: !this.state.isCompleted}, () => {\n      this.props.onChange(this.props.data.appId, {completed: this.state.isCompleted})\n    })\n  }\n\n  renderOptions = () => {\n    const { data } = this.props;\n\n    return (\n      <div className={styles.options}>\n        <div>\n          Item price:\n          <Form\n            onSubmit={(...props) => this.props.onPriceChange(data.appId, ...props)}\n            render={({ handleSubmit }) => (\n              <form onSubmit={handleSubmit}>\n                <Field\n                  name=\"price\"\n                  initialValue={data.price}\n                  component=\"input\"\n                  type=\"text\"\n                  placeholder=\"DLC name\"\n                  // TODO format doesn't work\n                  format={value => parseInt(value, 10)}\n                />\n                <button type=\"submit\">Сохранить</button>\n              </form>\n            )}\n          />\n        </div>\n        <div className=\"hideButton\">\n          <button onClick={this.hide}>Hide</button>\n        </div>\n\n        <Switch checked={this.state.isCompleted} label=\"Completed\" onChange={this.onChangeCompleted} />\n\n        <div className=\"dropDownPacks\">\n          {data.type !== 'pack' &&\n          <form onSubmit={e => this.patchSubmitedData(data.appId, e)}>\n            <select ref={this.selectRef}>\n              {this.props.packages && this.props.packages.map(pack => <option value={pack.packId}>{pack.name}</option>)}\n            </select>\n            <button>Package</button>\n          </form>\n          }\n        </div>\n      </div>\n    )\n  };\n\n  render() {\n    const { data } = this.props;\n    const { hidden } = this.state;\n    const isPack = data.type === 'pack';\n    const items = isPack ? data.games : data.dlc;\n\n    return (\n      <div className={classNames({ [styles.completed]: data.completed })}>\n        <div className={classNames(styles.gameWrapper, { [styles.hidden]: hidden })}>\n          <div className={styles.gameIcon}>\n            <img src={data.logo} alt=\"Image logo\" />\n          </div>\n\n          <div className='gameInformation'>\n            <div className=\"gameName\" onClick={this.toggleOptions}>{data.name}</div>\n            <div className=\"gameMinorInfo\">\n              <div className={`gameHourPrice ${this.definePriceHourClassName(data)}`} />\n              <div className='gameIndex'>#{this.props.index + 1}</div>\n              <div>{data.totalPrice}P</div>\n            </div>\n          </div>\n\n          <div className={styles.gameDuration}>\n            {formatPlaytime(data.playtimeForever)}\n          </div>\n        </div>\n\n        <div className={classNames(styles.details, { [styles.expanded]: this.state.isExpanded })}>\n          { this.renderOptions() }\n\n          <div className={styles.items}>\n            {!_.isEmpty(items) &&\n              <>\n                <h3>{isPack ? \"Items in pack:\" : \"DLCs list:\"}</h3>\n                {items.map(el => (\n                  <div className={styles.item}>\n                  {el.name && <div>{el.name}</div>}\n                  {isPack ?\n                    <div>{formatPlaytime(el.playtimeForever)}</div>\n                    :\n                    <div>{el.price}</div>\n                  }\n                  </div>\n                  ))\n                }\n              </>\n            }\n\n            {!isPack &&\n              <div className={styles.addDlcWrapper}>\n                <h3>Add DLC</h3>\n\n                <Form\n                  onSubmit={(...props) => this.props.onAddDlcFormSubmit(data.appId, ...props)}\n                  render={({ handleSubmit, reset }) => (\n                    // TODO reset doesn't work\n                    <form onSubmit={(...rest) => handleSubmit(...rest).then(reset)}>\n                      <Field name=\"dlcName\" component=\"input\" type=\"text\" placeholder=\"DLC name\"/>\n                      <Field name=\"dlcPrice\" component=\"input\" type=\"number\" placeholder=\"DLC price\"/>\n                      <button type=\"submit\">Сохранить</button>\n                    </form>\n                  )}\n                />\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Game\n","import React from 'react'\nimport {formatPlaytime, getTotalPrice} from \"../helpers\";\nimport Game from \"./Game/Game\";\n\nexport const Stats = ({ games, packs }) => {\n  let price = 0;\n  let playtimeForever = 0;\n\n  games.forEach(game => {\n    if (!game.hidden) {\n      price = price + getTotalPrice(game);\n      playtimeForever = playtimeForever + game.playtimeForever;\n    }\n  });\n\n  packs.forEach(pack => {\n    price = price + pack.price;\n    playtimeForever = playtimeForever + pack.playtimeForever;\n  });\n\n  return (\n    <>\n      <div className=\"stats\">\n        <div>{`Total price: ${price}P`}</div>\n        <div>{`Total playtime: ${Math.round(playtimeForever / 60)}hrs`}</div>\n      </div>\n      <div className=\"twoWeeks\">\n        <h3>Two weeks leaders:</h3>\n        {\n          games\n            .filter(g => g.playtimeTwoWeeks)\n            .sort((g1, g2) => g2.playtimeTwoWeeks - g1.playtimeTwoWeeks)\n            .map(g => {\n              const _g = {...g};\n              _g.playtimeForever = _g.playtimeTwoWeeks\n              return _g\n            })\n            .map((g, i) => <Game data={g} index={i}>{g.name} {formatPlaytime(g.playtimeTwoWeeks)}</Game>)\n        }\n      </div>\n\n    </>\n  )\n};\n","import React from 'react'\nimport { Classes, Drawer, Position, Radio, RadioGroup } from \"@blueprintjs/core\";\nimport { Field, Form } from \"react-final-form\";\n\nconst Settings = ({ isOpen, onClose, serverStatus, onSortChange, sortedBy, sortOrder, onSortOrderChange, addPack }) => {\n  return (\n    <Drawer\n      isOpen={isOpen}\n      onClose={onClose}\n      autoFocus={true}\n      canEscapeKeyClose={true}\n      canOutsideClickClose={true}\n      enforceFocus={true}\n      hasBackdrop={true}\n      position={Position.RIGHT}\n      usePortal={true}\n      size={Drawer.SIZE_SMALL}\n    >\n      <div className={Classes.DRAWER_BODY}>\n        <div className={Classes.DIALOG_BODY}>\n          <div className={`loadingState ${serverStatus}`}/>\n\n          <RadioGroup\n            label=\"Sort by:\"\n            onChange={onSortChange}\n            selectedValue={sortedBy}\n          >\n            <Radio label=\"Price\" value=\"totalPrice\"/>\n            <Radio label=\"Hours\" value=\"playtimeForever\"/>\n            <Radio label=\"Price per hour\" value=\"pricePerHour\"/>\n          </RadioGroup>\n\n          <RadioGroup\n            label=\"Order:\"\n            onChange={onSortOrderChange}\n            selectedValue={sortOrder}\n          >\n            <Radio label=\"Asc\" value=\"asc\"/>\n            <Radio label=\"Desc\" value=\"desc\"/>\n          </RadioGroup>\n          <Form\n            onSubmit={addPack}\n            render={({ handleSubmit }) => (\n              <form onSubmit={handleSubmit}>\n                <Field name=\"packName\" component=\"input\" type=\"text\" placeholder=\"Package name\"/>\n                <Field name=\"packPrice\" component=\"input\" type=\"number\" placeholder=\"Package price\"/>\n                <button type=\"submit\">Сохранить</button>\n              </form>\n            )}\n          />\n        </div>\n      </div>\n    </Drawer>\n  )\n};\n\nexport default Settings\n","import axios from \"axios\";\n\nexport const gamesActionsTypes = {\n  fetchGamesSuccess: 'FETCH_GAMES_SUCCESS',\n  gameUpdate: 'gameUpdate',\n};\n\nconst fetchGamesSuccess = (games) => ({\n  type: gamesActionsTypes.fetchGamesSuccess,\n  games\n});\n\nexport const fetchGames = () => (\n  (dispatch) => (\n    axios\n      .get(`http://steamify-api.61hub.com/v1/games`)\n      .then(response => dispatch(fetchGamesSuccess(response.data)))\n  )\n);\n\nexport const gameUpdate = (game) => ({\n  type: gamesActionsTypes.gameUpdate,\n  game\n});\n\n","import axios from \"axios\";\n\nexport const packsActionsTypes = {\n  fetchPacksSuccess: 'FETCH_PACKS_SUCCESS',\n};\n\nconst fetchPacksSuccess = (packs) => ({\n  type: packsActionsTypes.fetchPacksSuccess,\n  packs\n});\n\nexport const fetchPacks = () => (\n  (dispatch) => (\n    axios\n      .get(`http://steamify-api.61hub.com/v1/packs`)\n      .then(response => dispatch(fetchPacksSuccess(response.data)))\n  )\n);\n","import { createSelector } from 'reselect'\nimport { countPriceHour, getTotalPrice } from \"../../helpers\";\n\nconst getPacks = state => state.packs\nconst getGames = state => state.games\n\nexport const getComposedPacks = createSelector(\n  [getPacks, getGames],\n  (packs, games) => {\n    return packs.map(packData => {\n      const pack = {...packData}\n\n      pack.games = [];\n      pack.type = 'pack';\n      pack.items.forEach(id => {\n        const foundGame = games.find(el => el.appId === parseInt(id));\n        if (foundGame) {\n          pack.games.push(foundGame);\n        }\n      });\n\n      pack.playtimeForever = 0;\n      if (pack.games && pack.games.length) {\n        pack.games.forEach(g => pack.playtimeForever += g.playtimeForever);\n        pack.logo = pack.games[Math.floor(Math.random() * (pack.games.length - 1))].logo;\n        pack.pricePerHour = countPriceHour(pack);\n      }\n      pack.totalPrice = pack.price\n      return pack\n    });\n  }\n);\n\nexport const getComposedGames = createSelector(\n  [getGames],\n  (games) => {\n    return games.map(gameData => {\n      const game = {...gameData}\n      if (isNaN(parseInt(game.price))) {\n        game.price = 0\n      } else {\n        game.price = parseInt(game.price)\n      }\n      game.pricePerHour = countPriceHour(game);\n      game.totalPrice = getTotalPrice(game);\n      return game\n    });\n  }\n)\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport Game from \"./components/Game/Game\"\nimport * as _ from \"lodash\"\nimport { connect } from \"react-redux\"\nimport { Drawer, Position, Classes, Button, RadioGroup, Radio } from '@blueprintjs/core';\nimport \"../node_modules/normalize.css/normalize.css\";\nimport \"../node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"../node_modules/@blueprintjs/core/lib/css/blueprint.css\";\nimport './App.css';\nimport { Stats } from \"./components/Stats\";\nimport Settings from \"./components/Settings\";\nimport { fetchGames, gameUpdate } from \"./redux/actions/games\";\nimport { fetchPacks } from \"./redux/actions/packs\";\nimport PropTypes from 'proptypes'\nimport { getComposedGames, getComposedPacks } from \"./redux/selectors\";\n\nclass App extends Component {\n  state = {\n    serverStatus: \"\",\n    sortedBy: \"playtimeForever\",\n    sortOrder: \"desc\",\n    isSettingsOpen: false,\n    isStatsOpen: false\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    await this.props.fetchGames();\n    await this.props.fetchPacks();\n  };\n\n  updateItem = (appId, updates) => {\n    this.setState({ serverStatus: \"loading\" });\n\n    axios.patch(`http://steamify-api.61hub.com/v1/games/${appId}`, updates)\n      .then(response => {\n        this.props.gameUpdate({appId, ...updates});\n        this.setState({ serverStatus: \"success\" })\n      })\n      .catch(response => this.setState({ serverStatus: \"error\" }));\n  };\n\n  addDlc = (appid, {dlcName, dlcPrice}) => {\n    const { games } = this.props;\n    const gameToUpdate = games.find(element => element.appId === appid);\n\n    this.setState({ serverStatus: \"loading\" });\n    return axios.patch(`http://steamify-api.61hub.com/v1/games/${appid}`, {\n      dlc: [...gameToUpdate.dlc, {\n        name: dlcName,\n        price: dlcPrice\n      }]\n    })\n      .then(response => {\n        this.props.gameUpdate(response.data);\n        this.setState({ serverStatus: \"success\" });\n      })\n      .catch(response => this.setState({ serverStatus: \"error\" }));\n  };\n\n  addPack = ({ packName, packPrice }) => {\n    axios.post(`http://steamify-api.61hub.com/v1/packs`, { name: packName, price: packPrice })\n  };\n\n  render() {\n    const { games, packs } = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"controls\">\n          <Button className=\"bp3-minimal\" onClick={() => this.setState({ isSettingsOpen: true })}\n                  icon=\"settings\"/>\n          <Button className=\"bp3-minimal\" onClick={() => this.setState({ isStatsOpen: true })}\n                  icon=\"grouped-bar-chart\"/>\n          <Button className='bp3-minimal' onClick={this.fetchData} icon=\"refresh\"/>\n        </div>\n\n        <Settings\n          isOpen={this.state.isSettingsOpen}\n          onClose={() => this.setState({ isSettingsOpen: false })}\n          serverStatus={this.state.serverStatus}\n          onSortChange={e => this.setState({ sortedBy: e.currentTarget.value })}\n          sortedBy={this.state.sortedBy}\n          sortOrder={this.state.sortOrder}\n          onSortOrderChange={e => this.setState({ sortOrder: e.currentTarget.value })}\n          addPack={this.addPack}\n        />\n\n        <Drawer\n          isOpen={this.state.isStatsOpen}\n          onClose={() => this.setState({ isStatsOpen: false })}\n          autoFocus={true}\n          canEscapeKeyClose={true}\n          canOutsideClickClose={true}\n          enforceFocus={true}\n          hasBackdrop={true}\n          position={Position.RIGHT}\n          usePortal={true}\n          size={Drawer.SIZE_LARGE}\n        >\n          <div className={Classes.DRAWER_BODY}>\n            <div className={Classes.DIALOG_BODY}>\n              <Stats games={[...this.props.games]} packs={[...this.props.packs]}/>\n            </div>\n          </div>\n        </Drawer>\n\n        <div className=\"mainWrapper\">\n\n          {_.orderBy([...packs, ...games], [this.state.sortedBy, \"playtimeForever\"], [this.state.sortOrder])\n            .filter(el => !el.hidden)\n            .map((el, index) =>\n              <Game\n                key={el.appId}\n                data={el}\n                index={index}\n                onChange={this.updateItem}\n                onPriceChange={this.updateItem}\n                onAddDlcFormSubmit={this.addDlc}\n                packages={this.props.packs}\n                packId={this.state.packId}\n                // TODO\n                onAddedToPack={this.fetchData}\n              />\n            )}\n        </div>\n      </div>\n\n    );\n  }\n}\n\nApp.propTypes = {\n  games: PropTypes.arrayOf(PropTypes.object),\n  packs: PropTypes.arrayOf(PropTypes.object),\n  fetchGames: PropTypes.func.isRequired,\n  fetchPacks: PropTypes.func.isRequired,\n  gameUpdate: PropTypes.func.isRequired,\n};\n\nApp.defaultProps = {\n  games: [],\n  packs: [],\n};\n\nexport default connect(\n  (state) => ({\n    games: getComposedGames(state),\n    packs: getComposedPacks(state)\n  }),\n  { fetchGames, fetchPacks, gameUpdate }\n)(App);\n","import { gamesReducer } from \"./games\";\nimport { packsReducer } from \"./packs\";\nimport { combineReducers } from \"redux\";\n\nexport default combineReducers({\n  games: gamesReducer,\n  packs: packsReducer\n})\n","import { gamesActionsTypes } from \"../actions/games\";\n\nexport const gamesReducer = (state = [], action) => {\n  switch (action.type) {\n    case gamesActionsTypes.fetchGamesSuccess:\n      return action.games;\n\n    case gamesActionsTypes.gameUpdate:\n      return state.map(item => {\n        if (item.appId === action.game.appId) {\n          return {...item, ...action.game}\n        }\n        return item;\n      });\n\n    default:\n      return state\n  }\n};\n","import { packsActionsTypes } from \"../actions/packs\";\n\nexport const packsReducer = (state = [], action) => {\n  switch (action.type) {\n    case packsActionsTypes.fetchPacksSuccess:\n      return action.packs;\n\n    default:\n      return state\n  }\n};\n","import {createStore, compose, applyMiddleware} from \"redux\"\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst middlewares = window.__REDUX_DEVTOOLS_EXTENSION__ ? compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__()\n) : applyMiddleware(thunk);\n\nconst store = createStore(\n  reducers,\n  middlewares\n);\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameWrapper\":\"Game_gameWrapper__2AG3X\",\"hidden\":\"Game_hidden__2fBRt\",\"gameIcon\":\"Game_gameIcon__2PFn2\",\"options\":\"Game_options__oRGaS\",\"items\":\"Game_items__FCx4C\",\"item\":\"Game_item__3-19d\",\"details\":\"Game_details__3t6zl\",\"expanded\":\"Game_expanded__3K6Ps\",\"addDlcWrapper\":\"Game_addDlcWrapper__jxUtc\",\"gameDuration\":\"Game_gameDuration__1zQtp\",\"completed\":\"Game_completed__8B1RG\"};"],"sourceRoot":""}